DEBUG - Creating shared instance of singleton bean 'securityConfiguration'
DEBUG - Creating shared instance of singleton bean 'developerController'
DEBUG - Creating shared instance of singleton bean 'developerService'
DEBUG - Creating shared instance of singleton bean 'developerRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#2'
DEBUG - Creating shared instance of singleton bean 'jpa.DeveloperRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'jpaSharedEM_entityManagerFactory'
DEBUG - Creating shared instance of singleton bean 'jpaMappingContext'
DEBUG - Initializing JpaMetamodelMappingContext…
DEBUG - Finished initializing JpaMetamodelMappingContext
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Statistics initialized [enabled=false]
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.DeveloperRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.DeveloperRepository.
DEBUG - Autowiring by type from bean name 'developerService' via constructor to bean named 'developerRepository'
DEBUG - Autowiring by type from bean name 'developerController' via constructor to bean named 'developerService'
DEBUG - Creating shared instance of singleton bean 'gameController'
DEBUG - Creating shared instance of singleton bean 'gameService'
DEBUG - Creating shared instance of singleton bean 'gameRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#0'
DEBUG - Creating shared instance of singleton bean 'jpa.GameRepository.fragments#0'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.GameRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.GameRepository.
DEBUG - Autowiring by type from bean name 'gameService' via constructor to bean named 'gameRepository'
DEBUG - Autowiring by type from bean name 'gameController' via constructor to bean named 'gameService'
DEBUG - Creating shared instance of singleton bean 'logController'
DEBUG - Creating shared instance of singleton bean 'secretController'
DEBUG - Creating shared instance of singleton bean 'userController'
DEBUG - Creating shared instance of singleton bean 'userService'
DEBUG - Creating shared instance of singleton bean 'userRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#4'
DEBUG - Creating shared instance of singleton bean 'jpa.UserRepository.fragments#0'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.UserRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query User.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy108.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query User.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.UserRepository.
DEBUG - Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
DEBUG - Autowiring by type from bean name 'userController' via constructor to bean named 'userService'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
DEBUG - Creating shared instance of singleton bean 'filterChain'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
DEBUG - Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
DEBUG - Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
DEBUG - Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
DEBUG - Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'objectPostProcessor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
DEBUG - Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerRegistrationCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration'
DEBUG - Autowiring by type from bean name 'resourceHandlerRegistrationCustomizer' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
DEBUG - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'clientRegistrationRepository'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
DEBUG - Autowiring by type from bean name 'clientRegistrationRepository' via factory method to bean named 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
DEBUG - Creating shared instance of singleton bean 'authorizedClientRepository'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'authorizedClientService'
DEBUG - Autowiring by type from bean name 'authorizedClientService' via factory method to bean named 'clientRegistrationRepository'
DEBUG - Autowiring by type from bean name 'authorizedClientRepository' via factory method to bean named 'authorizedClientService'
DEBUG - Creating shared instance of singleton bean 'authenticationManagerBuilder'
DEBUG - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
DEBUG - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'authenticationEventPublisher'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
DEBUG - Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration'
DEBUG - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
DEBUG - Autowiring by type from bean name 'filterChain' via factory method to bean named 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity'
INFO  - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@67683210, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@329aa2d1, org.springframework.security.web.context.SecurityContextHolderFilter@70cdbd18, org.springframework.security.web.header.HeaderWriterFilter@6705fb02, org.springframework.web.filter.CorsFilter@1ec22831, org.springframework.security.web.csrf.CsrfFilter@1952ad9d, org.springframework.security.web.authentication.logout.LogoutFilter@7657d29f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f3d5cd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20a3321a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@103033fe, org.springframework.security.web.access.ExceptionTranslationFilter@13552290]
DEBUG - Creating shared instance of singleton bean 'webSecurityCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#1'
DEBUG - Creating shared instance of singleton bean 'jpa.OrderRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'orderRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.OrderRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.OrderRepository.
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#3'
DEBUG - Creating shared instance of singleton bean 'jpa.AdminsRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'adminsRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.AdminsRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query Admins.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy108.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query Admins.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.AdminsRepository.
DEBUG - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskExecutorBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
DEBUG - Creating shared instance of singleton bean 'error'
DEBUG - Creating shared instance of singleton bean 'beanNameViewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'conventionErrorViewResolver'
DEBUG - Creating shared instance of singleton bean 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'basicErrorController'
DEBUG - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG - Creating shared instance of singleton bean 'mvcValidator'
WARN  - HV000184: ParameterMessageInterpolator has been chosen, EL interpolation will not be supported
DEBUG - Failed to set up a Bean Validation provider
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:279)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:84)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG - Creating shared instance of singleton bean 'messageConverters'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'stringHttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
DEBUG - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
DEBUG - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
DEBUG - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Creating shared instance of singleton bean 'parameterNamesModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
DEBUG - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - @EnableAutoConfiguration was declared on a class in the package 'com.example.topgamesdata,com.example.topgameswebapi'. Automatic @Repository and @Entity scanning is enabled.
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
DEBUG - Creating shared instance of singleton bean 'jsonComponentModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonGeoModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
DEBUG - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'sortResolver'
DEBUG - Creating shared instance of singleton bean 'sortCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Creating shared instance of singleton bean 'pageableResolver'
DEBUG - Creating shared instance of singleton bean 'pageableCustomizer'
DEBUG - Creating shared instance of singleton bean 'applicationTaskExecutor'
DEBUG - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
DEBUG - Initializing ExecutorService 'applicationTaskExecutor'
DEBUG - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'localeResolver'
DEBUG - Creating shared instance of singleton bean 'themeResolver'
DEBUG - Creating shared instance of singleton bean 'flashMapManager'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 
	c.e.t.c.DeveloperController:
	{GET [/api/developer/getAll]}: getAllDevelopers()
DEBUG - 
	c.e.t.c.GameController:
	{GET [/api/game/getAll]}: getAllGames()
	{GET [/api/game/{id}]}: getGameById(Long)
	{POST [/api/game/dev/deleteAll]}: deleteAllGames()
	{DELETE [/api/game/delete/{id}]}: deleteGame(Long)
	{PUT [/api/game/update/{id}]}: updateGame(Game,Long)
	{POST [/api/game/add]}: createGame(Game)
	{POST [/api/game/dev/addSamples]}: addSamples()
DEBUG - 
	c.e.t.c.LogController:
	{GET [/logs/info]}: getInfoLogs()
	{GET [/logs/warning]}: getWarningLogs()
	{GET [/logs/error]}: getErrorLogs()
	{GET [/logs/debug]}: getDebugLogs()
	{GET [/logs/all]}: getLogs()
DEBUG - 
	c.e.t.c.SecretController:
	{GET [/secret]}: wowYouAreLoggedInSoCool()
DEBUG - 
	c.e.t.c.UserController:
	{GET [/api/user/getAll]}: getAllUsers()
	{GET [/api/user/{id}]}: getUserById(Long)
	{DELETE [/api/user/delete/{id}]}: deleteUserById(Long)
	{PUT [/api/user/update/{id}]}: updateUserById(Long,User)
	{POST [/api/user/dev/deleteAll]}: deleteAllUsers()
	{POST [/api/user/add]}: createUser(User)
	{POST [/api/user/dev/addSamples]}: addSamples()
DEBUG - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
DEBUG - 23 mappings in 'requestMappingHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcPatternParser'
DEBUG - Creating shared instance of singleton bean 'mvcUrlPathHelper'
DEBUG - Creating shared instance of singleton bean 'mvcPathMatcher'
DEBUG - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'beanNameHandlerMapping'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'beanNameHandlerMapping' {}
DEBUG - Creating shared instance of singleton bean 'routerFunctionMapping'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerMapping'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
DEBUG - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'handlerFunctionAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'handlerExceptionResolver'
DEBUG - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'mvcViewResolver'
DEBUG - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'viewNameTranslator'
DEBUG - Creating shared instance of singleton bean 'defaultViewResolver'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Creating shared instance of singleton bean 'mbeanExporter'
DEBUG - Creating shared instance of singleton bean 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'mbeanServer'
DEBUG - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@2a3046da
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
DEBUG - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
DEBUG - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'applicationAvailability'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'lifecycleProcessor'
DEBUG - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
DEBUG - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'delegatingApplicationListener'
DEBUG - Creating shared instance of singleton bean 'springSecurityFilterChain'
DEBUG - Creating shared instance of singleton bean 'mvcHandlerMappingIntrospector'
WARN  - You are asking Spring Security to ignore Mvc [pattern='/api/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
INFO  - Will not secure Mvc [pattern='/api/**']
WARN  - You are asking Spring Security to ignore Mvc [pattern='/logs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
INFO  - Will not secure Mvc [pattern='/logs/**']
DEBUG - Creating shared instance of singleton bean 'webSecurityExpressionHandler'
DEBUG - Creating shared instance of singleton bean 'privilegeEvaluator'
DEBUG - Creating shared instance of singleton bean 'requestDataValueProcessor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskSchedulerBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionTemplate'
DEBUG - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'multipartResolver'
DEBUG - Registering beans for JMX exposure on startup
DEBUG - Autodetecting user-defined JMX MBeans
DEBUG - Bean with name 'dataSource' has been autodetected for JMX exposure
DEBUG - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
DEBUG - Starting beans in phase -2147483647
DEBUG - Successfully started bean 'springBootLoggingLifecycle'
DEBUG - Starting beans in phase 2147481599
INFO  - Starting ProtocolHandler ["http-nio-8081"]
INFO  - Tomcat started on port(s): 8081 (http) with context path ''
DEBUG - Successfully started bean 'webServerStartStop'
DEBUG - Starting beans in phase 2147482623
DEBUG - Successfully started bean 'webServerGracefulShutdown'
DEBUG - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   OAuth2ClientRegistrationRepositoryConfiguration matched:
      - OAuth2 Clients Configured Condition found registered clients 806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com (ClientsConfiguredCondition)

   OAuth2ClientRegistrationRepositoryConfiguration#clientRegistrationRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) found bean 'clientRegistrationRepository' (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientService matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.OAuth2AuthorizedClientService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)
      - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) found beans of type 'org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean' &gameRepository, &orderRepository, &developerRepository, &adminsRepository, &userRepository and found beans of type 'org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension' org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0 (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
         - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   OAuth2WebSecurityConfiguration.OAuth2SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' filterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' filterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' clientRegistrationRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



INFO  - Started TopgamesWebApiApplication in 8.954 seconds (process running for 11.264)
DEBUG - Application availability state LivenessState changed to CORRECT
DEBUG - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  - Initializing Servlet 'dispatcherServlet'
DEBUG - Detected StandardServletMultipartResolver
DEBUG - Detected AcceptHeaderLocaleResolver
DEBUG - Detected FixedThemeResolver
DEBUG - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@70fe33fa
DEBUG - Detected org.springframework.web.servlet.support.SessionFlashMapManager@80b70fd
DEBUG - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
INFO  - Completed initialization in 5 ms
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all developers
INFO  - Got all games
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(512568556<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1274122544<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(161668868<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1566670634 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@2138804686 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@987673307 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - begin
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49cefef7]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@72416e6]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67c88c27]
DEBUG - Created new SQL alias : g1_0
DEBUG - Created new SQL alias : u1_0
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(60260019213013))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(60260019217561))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(60260019279021))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(60260019279021)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(60260019279021).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(60260019279021).name]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(60260019217561)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60260019217561).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(60260019217561).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60260019217561).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60260019217561).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60260019217561).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(60260019217561).releaseDate]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(60260019213013)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60260019213013).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60260019213013).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60260019213013).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60260019213013).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(60260019213013).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(60260019279021)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(60260019217561)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(60260019213013)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(60260019279021) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(60260019279021))@1151745255 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG -     com.example.topgamesdata.model.User(60260019213013) -> EntityResultInitializer(com.example.topgamesdata.model.User(60260019213013))@1657691284 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(60260019217561).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(60260019217561).developer)@1852161262 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@521307535)
DEBUG -     com.example.topgamesdata.model.Game(60260019217561).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60260019217561).genre)@983216597 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(60260019217561).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60260019217561).platform)@1328013900 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(60260019217561) -> EntityResultInitializer(com.example.topgamesdata.model.Game(60260019217561))@230113655 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(161668868<open>)]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1274122544<open>)]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(512568556<open>)]
DEBUG - committing
DEBUG - committing
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1566670634 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@987673307 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2138804686 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#addSamples()
DEBUG - POST "/api/game/dev/addSamples", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#addSamples()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Adding sample games
DEBUG - Found thread-bound EntityManager [SessionImpl(1007718856<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@382f1292]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 1
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 1
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 2
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 2
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 3
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 3
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 4
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 4
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 5
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 5
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 6
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 6
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1007718856<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#1], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#1], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#2], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#2], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#3], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#3], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#4], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#4], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#5], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#5], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#6], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#6], was: [<unreferenced>] (initialized)
DEBUG - Flushed: 0 insertions, 0 updates, 0 deletions to 12 objects
DEBUG - Flushed: 12 (re)creations, 0 updates, 0 removals to 12 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.Developer{country=Japan, name=FromSoftware, id=6}
DEBUG - com.example.topgamesdata.model.Developer{country=Canada, name=Ubisoft Montreal, id=5}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Naughty Dog, id=2}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Santa Monica Studio, id=1}
DEBUG - com.example.topgamesdata.model.Developer{country=Poland, name=CD Projekt Red, id=4}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Rockstar Games, id=3}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2011-09-22T00:00, genre=[ACTION, ADVENTURE], name=Dark Souls, description=Cool game, developer=com.example.topgamesdata.model.Developer#6, id=6, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2020-11-10T00:00, genre=[ACTION, ADVENTURE], name=Assassin's Creed Valhalla, description=A game about a viking, developer=com.example.topgamesdata.model.Developer#5, id=5, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2013-06-14T00:00, genre=[ACTION, ADVENTURE], name=The Last of Us, description=Cool game, developer=com.example.topgamesdata.model.Developer#2, id=2, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-04-20T00:00, genre=[ACTION, ADVENTURE], name=God of War, description=Cool game, developer=com.example.topgamesdata.model.Developer#1, id=1, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2015-05-18T00:00, genre=[ACTION, ADVENTURE, RPG, OPEN_WORLD], name=The Witcher 3: Wild Hunt, description=A game about a witcher, developer=com.example.topgamesdata.model.Developer#4, id=4, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-10-26T00:00, genre=[ACTION, ADVENTURE], name=Red Dead Redemption 2, description=A game about a cowboy, developer=com.example.topgamesdata.model.Developer#3, id=3, platform=[PLAYSTATION]}
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 4 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["ok"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - HHH000420: Closing un-released batch
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(1891386919<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1462643133<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@2122036800 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@1508498728 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7a442d57]
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(60262509361305))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5dd642cd]
INFO  - Got all developers
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(60262513724216))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Found thread-bound EntityManager [SessionImpl(2100826419<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(60262513724216)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60262513724216).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60262513724216).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60262513724216).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60262513724216).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(60262513724216).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(60262513724216)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(60262513724216) -> EntityResultInitializer(com.example.topgamesdata.model.User(60262513724216))@2029725788 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(60262509361305)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60262509361305).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(60262509361305).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60262509361305).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60262509361305).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60262509361305).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(60262509361305).releaseDate]

DEBUG - Setting JDBC Connection [HikariProxyConnection@1946153188 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891] read-only
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(60262509361305)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@77c07a43]
DEBUG - Initializer list
DEBUG - Created new SQL alias : d1_0
DEBUG -     com.example.topgamesdata.model.Game(60262509361305).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(60262509361305).developer)@1600734004 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@521307535)
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(60262528754009))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG -     com.example.topgamesdata.model.Game(60262509361305).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60262509361305).genre)@940695323 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(60262509361305).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60262509361305).platform)@790754580 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(60262509361305) -> EntityResultInitializer(com.example.topgamesdata.model.Game(60262509361305))@1313010419 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(60262528754009)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(60262528754009).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(60262528754009).name]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(60262528754009)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(60262528754009) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(60262528754009))@1391265168 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1462643133<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1508498728 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60262509361305)): 1
DEBUG - Writing [[]]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60262528754009)): 1
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).platform#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60262509361305)#1] : com.example.topgamesdata.model.Game@1aa93d2b
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60262509361305).developer#1) : 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60262528754009)#1] : com.example.topgamesdata.model.Developer@167288b6
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60262528754009)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c35e6e4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60262528754009)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60262528754009)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60262528754009)#2] : com.example.topgamesdata.model.Developer@367d37d5
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60262528754009)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c35e6e4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60262528754009)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60262528754009)): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60262528754009)#3] : com.example.topgamesdata.model.Developer@6fb18692
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60262528754009)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c35e6e4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60262528754009)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60262528754009)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60262528754009)#4] : com.example.topgamesdata.model.Developer@1cc05f46
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60262528754009)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c35e6e4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60262528754009)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60262528754009)): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60262528754009)#5] : com.example.topgamesdata.model.Developer@3d91f0ea
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60262528754009)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c35e6e4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60262528754009)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60262528754009)): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60262528754009)#6] : com.example.topgamesdata.model.Developer@620dbb12
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60262528754009)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c35e6e4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60262528754009)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(2100826419<open>)]
DEBUG - committing
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1251024277 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1946153188 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@7987248a
DEBUG - Writing [[com.example.topgamesdata.model.Developer@167288b6, com.example.topgamesdata.model.Developer@367d37d (truncated)...]
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3bb8f39a
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60262509361305).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60262509361305)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6ff339
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60262509361305)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60262509361305)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60262509361305)#2] : com.example.topgamesdata.model.Game@61165b19
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60262509361305).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@16816697 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@39629529
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c36016e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60262509361305).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60262509361305)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6ff339
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60262509361305)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60262509361305)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60262509361305)#3] : com.example.topgamesdata.model.Game@540f202b
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60262509361305).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1361489946 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@613c0d27
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fed77a
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60262509361305).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60262509361305)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6ff339
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60262509361305)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60262509361305)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60262509361305)#4] : com.example.topgamesdata.model.Game@3f5d574e
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60262509361305).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1080101707 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@37e899d9
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f9be73c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60262509361305).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60262509361305)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6ff339
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60262509361305)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60262509361305)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60262509361305)#5] : com.example.topgamesdata.model.Game@6ff1772c
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60262509361305).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@2039755639 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@45b53ccd
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1de2b087
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60262509361305).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60262509361305)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6ff339
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60262509361305)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60262509361305)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60262509361305).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60262509361305)#6] : com.example.topgamesdata.model.Game@45fd3d21
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60262509361305).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@60296896 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@3b16748a
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78bb8326
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60262509361305).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60262509361305)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6ff339
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60262509361305)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1891386919<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2122036800 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@1aa93d2b, com.example.topgamesdata.model.Game@61165b19, com.exa (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [CollectionTableGroup(com.example.topgamesdata.model.Game.genre)] with identifierForTableGroup [com.example.topgamesdata.model.Game.genre] for NavigablePath [com.example.topgamesdata.model.Game.genre] 
DEBUG - Generating Fetch for collection-part : `com.example.topgamesdata.model.Game.genre` -> `{element}`
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1799872394 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@150836454
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@150836454
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6dd1be4e
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@150836454
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@150836454
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@150836454
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6dd1be4e
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - Created new SQL alias : p1_0
DEBUG - Registration of TableGroup [CollectionTableGroup(com.example.topgamesdata.model.Game.platform)] with identifierForTableGroup [com.example.topgamesdata.model.Game.platform] for NavigablePath [com.example.topgamesdata.model.Game.platform] 
DEBUG - Generating Fetch for collection-part : `com.example.topgamesdata.model.Game.platform` -> `{element}`
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1425757798 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@721301037
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@721301037
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5c26744a
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@342099288 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1060620223
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1060620223
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@13ad5f03
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1060620223
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1060620223
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1060620223
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@13ad5f03
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1145472825 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@1027273856
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@1027273856
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@28b13536
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@847354037 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1977118572
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1977118572
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@487cb560
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1977118572
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1977118572
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1977118572
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@487cb560
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1050617624 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@1488877347
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@1488877347
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7605a725
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1513699690 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@a380e0f
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@a380e0f
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@a380e0f
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1296004363
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@a380e0f
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@864558696 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@1282084030
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@1282084030
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6026b66a
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1035773951 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1017560037
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1017560037
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7a8887c0
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1017560037
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1017560037
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1017560037
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7a8887c0
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@898693621 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@1332993017
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@1332993017
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@72532843
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@962023666 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@556583200
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@556583200
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@65875133
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@556583200
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@556583200
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@556583200
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@65875133
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1741952767 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@1301531292
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@1301531292
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@470cad6e
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#addSamples()
DEBUG - POST "/api/user/dev/addSamples", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#addSamples()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Adding samplee users
DEBUG - Found thread-bound EntityManager [SessionImpl(2090924125<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@726709b9]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next_val as id_val from user_seq for update
DEBUG - update user_seq set next_val= ? where next_val=?
DEBUG - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next_val as id_val from user_seq for update
DEBUG - update user_seq set next_val= ? where next_val=?
DEBUG - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(2090924125<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=Kamil, lastName=Kamilowicz, password=haslo, id=4, email=essawessie@wp.pl, username=Strongman1337}
DEBUG - com.example.topgamesdata.model.User{firstName=Piot, lastName=Piotrowicz, password=haslo, id=3, email=javaenjoyer@google.com, username=JavaEnjoyer}
DEBUG - com.example.topgamesdata.model.User{firstName=Szymon, lastName=Ziutkowski, password=haslo, id=2, email=bigboy@wp.pl, username=BigBoy11}
DEBUG - com.example.topgamesdata.model.User{firstName=Stefan, lastName=Stefanowicz, password=haslo, id=1, email=plshelpme@java.com, username=StefanKox2137}
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["Samples added"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(790791200<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@568684468 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - begin
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1974959445<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@25daef50]
DEBUG - Setting JDBC Connection [HikariProxyConnection@2070973843 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa] read-only
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(60266276786468))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(60266276786468)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60266276786468).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(60266276786468).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60266276786468).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60266276786468).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60266276786468).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(60266276786468).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(60266276786468)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7f4f1625]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(60266276786468).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(60266276786468).developer)@16227008 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@521307535)
DEBUG -     com.example.topgamesdata.model.Game(60266276786468).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60266276786468).genre)@1547367808 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(60266276786468).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60266276786468).platform)@412977082 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG -     com.example.topgamesdata.model.Game(60266276786468) -> EntityResultInitializer(com.example.topgamesdata.model.Game(60266276786468))@950328008 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - Created new SQL alias : u1_0
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(60266280245923))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(60266280245923)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60266280245923).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60266280245923).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60266280245923).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60266280245923).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(60266280245923).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(60266280245923)) {
          primaryTableReference : user as u1_0
        }
      }
    }

INFO  - Got all developers
DEBUG - Found thread-bound EntityManager [SessionImpl(1305830514<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(60266280245923) -> EntityResultInitializer(com.example.topgamesdata.model.User(60266280245923))@1516402919 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Setting JDBC Connection [HikariProxyConnection@1459102749 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891] read-only
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60266276786468)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).platform#1
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60266276786468)#1] : com.example.topgamesdata.model.Game@2aded332
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60266276786468).developer#1) : 1
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@34d5b739]
DEBUG - Initializer list
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60266280245923)): 1
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@100559912 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60266280245923)#1] : com.example.topgamesdata.model.User@17c0b163
DEBUG - Extracted JDBC value [1] - [plshelpme@java.com]
DEBUG - Extracted JDBC value [2] - [Stefan]
DEBUG - Extracted JDBC value [3] - [Stefanowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [StefanKox2137]
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(60266285257594))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60266280245923)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2c463c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60266280245923)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(60266285257594)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(60266285257594).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(60266285257594).name]

DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60266280245923)): 2
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(60266285257594)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60266280245923)#2] : com.example.topgamesdata.model.User@5b24fe8d
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - Extracted JDBC value [1] - [bigboy@wp.pl]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@20c9aaea
DEBUG - Extracted JDBC value [2] - [Szymon]
DEBUG - Initializer list
DEBUG - Extracted JDBC value [1] - [America]
DEBUG -     com.example.topgamesdata.model.Developer(60266285257594) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(60266285257594))@1151537110 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Extracted JDBC value [3] - [Ziutkowski]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Extracted JDBC value [5] - [BigBoy11]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56a01df7
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60266280245923)#2
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2c463c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60266280245923)#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60266276786468).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60266280245923)): 3
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60266280245923)#3] : com.example.topgamesdata.model.User@1055b383
DEBUG - Extracted JDBC value [1] - [javaenjoyer@google.com]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60266276786468)#1
DEBUG - Extracted JDBC value [2] - [Piot]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa8729d
DEBUG - Extracted JDBC value [3] - [Piotrowicz]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60266276786468)#1] - using loading instance
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [JavaEnjoyer]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60266280245923)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2c463c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60266280245923)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60266285257594)): 1
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60266276786468)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60266280245923)): 4
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).genre#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60266285257594)#1] : com.example.topgamesdata.model.Developer@252cfd7
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60266280245923)#4] : com.example.topgamesdata.model.User@28c5343
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).platform#2
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [1] - [essawessie@wp.pl]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - Extracted JDBC value [2] - [Kamil]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60266276786468)#2] : com.example.topgamesdata.model.Game@a883b22
DEBUG - Extracted JDBC value [3] - [Kamilowicz]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60266285257594)#1
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - Extracted JDBC value [5] - [Strongman1337]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e53bdf4
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60266276786468).developer#2) : 2
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60266285257594)#1] - using loading instance
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60266280245923)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2c463c
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60266280245923)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Initializer list
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60266285257594)): 2
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1132301428 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60266285257594)#2] : com.example.topgamesdata.model.Developer@68cf7902
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Initiating transaction commit
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1974959445<open>)]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60266285257594)#2
DEBUG - committing
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e53bdf4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60266285257594)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60266285257594)): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60266285257594)#3] : com.example.topgamesdata.model.Developer@37cb6be7
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60266285257594)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e53bdf4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60266285257594)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2070973843 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60266285257594)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60266285257594)#4] : com.example.topgamesdata.model.Developer@23f336be
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60266285257594)#4
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e53bdf4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@11d2e858
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60266285257594)#4] - using loading instance
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60266285257594)): 5
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e63c83a
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60266285257594)#5] : com.example.topgamesdata.model.Developer@608c9329
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - Writing [[com.example.topgamesdata.model.User@17c0b163, com.example.topgamesdata.model.User@5b24fe8d, com.exa (truncated)...]
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60266276786468).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60266285257594)#5
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e53bdf4
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60266285257594)#5] - using loading instance
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60266276786468)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa8729d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60266276786468)#2] - using loading instance
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60266285257594)): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60266285257594)#6] : com.example.topgamesdata.model.Developer@7398e153
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60266276786468)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60266285257594)#6
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).genre#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e53bdf4
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60266285257594)#6] - using loading instance
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60266276786468)#3] : com.example.topgamesdata.model.Game@433b8a53
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - Initiating transaction commit
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60266276786468).developer#3) : 3
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1305830514<open>)]
DEBUG - committing
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@906508990 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1459102749 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Developer@252cfd7, com.example.topgamesdata.model.Developer@68cf7902 (truncated)...]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@1a7deea9
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Completed 200 OK
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d57ea92
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60266276786468).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60266276786468)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa8729d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60266276786468)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60266276786468)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60266276786468)#4] : com.example.topgamesdata.model.Game@5a9fa674
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60266276786468).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@647316505 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@19f66c21
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@154f568a
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60266276786468).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60266276786468)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa8729d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60266276786468)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60266276786468)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60266276786468)#5] : com.example.topgamesdata.model.Game@85ddb97
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60266276786468).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@958493793 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@1a695cbe
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2859b1ee
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60266276786468).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60266276786468)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa8729d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60266276786468)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60266276786468)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60266276786468).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60266276786468)#6] : com.example.topgamesdata.model.Game@325d8add
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60266276786468).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1716450343 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@9f15e5b
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@180f6c8e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60266276786468).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60266276786468)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa8729d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60266276786468)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(790791200<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@568684468 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@2aded332, com.example.topgamesdata.model.Game@a883b22, com.exam (truncated)...]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@290412952 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@2079384445
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@2079384445
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@53b117c1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@2079384445
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@2079384445
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@2079384445
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@53b117c1
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1941181098 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@1704723537
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@1704723537
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7331530f
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1958436328 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1734019032
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1734019032
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1becb96c
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1734019032
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1734019032
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1734019032
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1becb96c
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@2068079758 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@834859361
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@834859361
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3423522c
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@736515605 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1705969875
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1705969875
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@467d4c06
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1705969875
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1705969875
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1705969875
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@467d4c06
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1900546230 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@1664728086
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@1664728086
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@719340db
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@487904856 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3316e79e
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3316e79e
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3316e79e
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@2100526908
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3316e79e
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1364272961 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@139386517
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@139386517
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4519ea68
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@306605743 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1307885593
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1307885593
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2a19010b
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1307885593
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1307885593
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1307885593
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2a19010b
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@337089051 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@1741241058
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@1741241058
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@368d10f0
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1526883401 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@120760299
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@120760299
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3048b7b2
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@120760299
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@120760299
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@120760299
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3048b7b2
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1927734005 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@1466861343
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@1466861343
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@a88fc73
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#updateGame(Game, Long)
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#updateGame(Game, Long)
DEBUG - PUT "/api/game/update/4", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#updateGame(Game, Long)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.Game@11a1c8b8]
DEBUG - Found thread-bound EntityManager [SessionImpl(1890385663<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@629673081 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@87cddfd]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.developer -> EntityJoinedFetchInitializer(com.example.topgamesdata.model.Game.developer)@1621700149 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@521307535)
DEBUG -     com.example.topgamesdata.model.Game.genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game.genre)@2059290868 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game.platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game.platform)@470678603 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game -> EntityResultInitializer(com.example.topgamesdata.model.Game)@867405647 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,d1_0.id,d1_0.country,d1_0.name,g1_0.name,g1_0.release_date from game g1_0 left join developer d1_0 on d1_0.id=g1_0.developer_id where g1_0.id=?
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game.developer): 4
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - (EntityJoinedFetchInitializer) Created new entity instance [com.example.topgamesdata.model.Game.developer#4] : com.example.topgamesdata.model.Developer@612f9c77
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game#4] : com.example.topgamesdata.model.Game@4e2afe12
DEBUG - Extracted JDBC value [3] - [Poland]
DEBUG - Extracted JDBC value [4] - [CD Projekt Red]
DEBUG - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game.developer#4
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - (EntityJoinedFetchInitializer) Found existing loading entry [com.example.topgamesdata.model.Game.developer#4] - using loading instance
DEBUG - Extracted JDBC value [5] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [6] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53fb0f84
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game#4] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1890385663<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@629673081 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1890385663<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@629673081 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891] read-only
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@48142bf7]
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1890385663<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@629673081 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1890385663<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5576b4ff]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1890385663<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#4], was: [com.example.topgamesdata.model.Game.genre#4] (uninitialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#4], was: [com.example.topgamesdata.model.Game.platform#4] (uninitialized)
DEBUG - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.Developer{country=Poland, name=CD Projekt Red, id=4}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2015-05-18T00:00, genre=<uninitialized>, name=null, description=null, developer=com.example.topgamesdata.model.Developer#4, id=4, platform=<uninitialized>}
DEBUG - update game set description=?, developer_id=?, name=?, release_date=? where id=?
DEBUG - Not closing pre-bound JPA EntityManager after transaction
INFO  - Game with id 4 was updated
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["ok"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
INFO  - Got all developers
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1107409238<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(796788953<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1555836380<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@2138424126 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@634105843 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@1363885518 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f8391d8]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1803e16d]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@738e8d54]
DEBUG - Created new SQL alias : d1_0
DEBUG - Created new SQL alias : g1_0
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(60335009701955))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(60335009748794))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(60335009687929))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(60335009701955)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(60335009701955).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(60335009701955).name]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(60335009687929)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60335009687929).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60335009687929).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60335009687929).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(60335009687929).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(60335009687929).username]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(60335009748794)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60335009748794).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(60335009748794).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60335009748794).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(60335009748794).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(60335009748794).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(60335009748794).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(60335009701955)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(60335009748794)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(60335009687929)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(60335009701955) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(60335009701955))@1136634713 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG -     com.example.topgamesdata.model.User(60335009687929) -> EntityResultInitializer(com.example.topgamesdata.model.User(60335009687929))@792050053 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(60335009748794).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(60335009748794).developer)@460019867 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@521307535)
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG -     com.example.topgamesdata.model.Game(60335009748794).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60335009748794).genre)@1249804779 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(60335009748794).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(60335009748794).platform)@124787738 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(60335009748794) -> EntityResultInitializer(com.example.topgamesdata.model.Game(60335009748794))@824715669 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60335009687929)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60335009701955)): 1
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60335009748794)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).platform#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60335009701955)#1] : com.example.topgamesdata.model.Developer@4b76fcee
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60335009687929)#1] : com.example.topgamesdata.model.User@5c54d005
DEBUG - Extracted JDBC value [1] - [plshelpme@java.com]
DEBUG - Extracted JDBC value [2] - [Stefan]
DEBUG - Extracted JDBC value [3] - [Stefanowicz]
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60335009748794)#1] : com.example.topgamesdata.model.Game@79099373
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60335009748794).developer#1) : 1
DEBUG - Extracted JDBC value [5] - [StefanKox2137]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60335009687929)#1
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60335009701955)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2fb39b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60335009687929)#1] - using loading instance
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@752d73ba
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60335009687929)): 2
DEBUG - Initializer list
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60335009701955)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@2058821501 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60335009701955)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60335009687929)#2] : com.example.topgamesdata.model.User@b627752
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60335009701955)#2] : com.example.topgamesdata.model.Developer@21c13559
DEBUG - Extracted JDBC value [1] - [bigboy@wp.pl]
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - Extracted JDBC value [2] - [Szymon]
DEBUG - Extracted JDBC value [3] - [Ziutkowski]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60335009701955)#2
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [BigBoy11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@752d73ba
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60335009701955)#2] - using loading instance
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60335009687929)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2fb39b
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60335009687929)#2] - using loading instance
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60335009701955)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60335009701955)#3] : com.example.topgamesdata.model.Developer@5e8484b2
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60335009687929)): 3
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60335009687929)#3] : com.example.topgamesdata.model.User@64e515a9
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - Extracted JDBC value [1] - [javaenjoyer@google.com]
DEBUG - Extracted JDBC value [2] - [Piot]
DEBUG - Extracted JDBC value [3] - [Piotrowicz]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60335009701955)#3
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@752d73ba
DEBUG - Extracted JDBC value [5] - [JavaEnjoyer]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60335009701955)#3] - using loading instance
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60335009687929)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2fb39b
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60335009701955)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@18b2a583
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60335009701955)#4] : com.example.topgamesdata.model.Developer@22e98200
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60335009687929)#3] - using loading instance
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60335009701955)#4
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(60335009687929)): 4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@752d73ba
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(60335009687929)#4] : com.example.topgamesdata.model.User@1ecb25c8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60335009701955)#4] - using loading instance
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3c1d1f
DEBUG - Extracted JDBC value [1] - [essawessie@wp.pl]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - Extracted JDBC value [2] - [Kamil]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60335009701955)): 5
DEBUG - Extracted JDBC value [3] - [Kamilowicz]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60335009701955)#5] : com.example.topgamesdata.model.Developer@3cc79544
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [Strongman1337]
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(60335009687929)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2fb39b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(60335009687929)#4] - using loading instance
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60335009701955)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@752d73ba
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60335009701955)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(60335009701955)): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(60335009701955)#6] : com.example.topgamesdata.model.Developer@14041478
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60335009748794).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(60335009701955)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@752d73ba
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(60335009701955)#6] - using loading instance
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1107409238<open>)]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1555836380<open>)]
DEBUG - committing
DEBUG - committing
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60335009748794)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f9152b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60335009748794)#1] - using loading instance
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2138424126 wrapping com.mysql.cj.jdbc.ConnectionImpl@499e32aa]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1363885518 wrapping com.mysql.cj.jdbc.ConnectionImpl@8a33891]
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60335009748794)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60335009748794)#2] : com.example.topgamesdata.model.Game@266b29a1
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60335009748794).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@708255754 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@1e8d1077
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@da954dc
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60335009748794).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60335009748794)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f9152b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60335009748794)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60335009748794)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60335009748794)#3] : com.example.topgamesdata.model.Game@41f2a0b3
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60335009748794).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@988199733 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@5d48c763
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5278e0ec
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60335009748794).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60335009748794)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f9152b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60335009748794)#3] - using loading instance
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60335009748794)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60335009748794)#4] : com.example.topgamesdata.model.Game@2aacf64b
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60335009748794).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@246921427 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Writing [[com.example.topgamesdata.model.Developer@4b76fcee, com.example.topgamesdata.model.Developer@21c1355 (truncated)...]
DEBUG - Writing [[com.example.topgamesdata.model.User@5c54d005, com.example.topgamesdata.model.User@b627752, com.exam (truncated)...]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@1d13515e
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e51030f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60335009748794).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [null]
DEBUG - Extracted JDBC value [3] - [null]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60335009748794)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f9152b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60335009748794)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60335009748794)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60335009748794)#5] : com.example.topgamesdata.model.Game@7a80a511
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60335009748794).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@753415391 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@25cb1951
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48e88ffb
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60335009748794).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60335009748794)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f9152b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60335009748794)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(60335009748794)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(60335009748794).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(60335009748794)#6] : com.example.topgamesdata.model.Game@5b1e6300
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(60335009748794).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1545283129 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@6dfcfa7d
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68d32315
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(60335009748794).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(60335009748794)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f9152b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(60335009748794)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(796788953<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@634105843 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@79099373, com.example.topgamesdata.model.Game@266b29a1, com.exa (truncated)...]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@882830967 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@1235149718
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@1235149718
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@66166cbd
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1235149718
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@1235149718
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@1235149718
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@66166cbd
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1161810171 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@965353393
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@965353393
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2bc3ba62
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@762135461 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1240084106
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1240084106
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@54a90237
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1240084106
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1240084106
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1240084106
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@54a90237
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1744727012 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@1929647693
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@1929647693
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6fdd2cbe
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@356785444 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1891808203
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1891808203
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7c40ce05
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1891808203
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1891808203
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1891808203
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7c40ce05
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@712574048 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@112859916
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@112859916
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4de2f73f
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@729192055 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2311c229
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2311c229
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2311c229
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@607037174
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2311c229
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@25211973 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@1061555919
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@1061555919
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2453ec30
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@193606481 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1534181241
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1534181241
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@50e5a11f
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1534181241
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1534181241
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1534181241
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@50e5a11f
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1760373035 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@1550818536
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@1550818536
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@740ecf9e
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@714519799 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@720973011
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@720973011
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@22ce7541
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@720973011
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@720973011
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@720973011
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@22ce7541
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1691159229 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@1459988812
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@1459988812
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@53fd4b25
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
DEBUG - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359, started on Fri Jan 27 13:03:54 CET 2023
DEBUG - Stopping beans in phase 2147482623
DEBUG - Bean 'webServerGracefulShutdown' completed its stop procedure
DEBUG - Stopping beans in phase 2147481599
DEBUG - Bean 'webServerStartStop' completed its stop procedure
DEBUG - Stopping beans in phase -2147483647
DEBUG - Bean 'springBootLoggingLifecycle' completed its stop procedure
DEBUG - Unregistering JMX-exposed beans on shutdown
DEBUG - Unregistering JMX-exposed beans
DEBUG - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
DEBUG - HHH000031: Closing
DEBUG - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@71d275a0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@fb2c2f3]
DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
INFO  - HikariPool-1 - Shutdown initiated...
DEBUG - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@145a821d: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@499e32aa: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8a33891: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@39e1f40a: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@688cc7de: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6cc25bf3: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@656ccdd6: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@ff717d6: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@721e66cc: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@129d5fe1: (connection evicted)
DEBUG - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
INFO  - HikariPool-1 - Shutdown completed.
