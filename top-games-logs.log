DEBUG - Creating shared instance of singleton bean 'securityConfiguration'
DEBUG - Creating shared instance of singleton bean 'developerController'
DEBUG - Creating shared instance of singleton bean 'developerService'
DEBUG - Creating shared instance of singleton bean 'developerRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#3'
DEBUG - Creating shared instance of singleton bean 'jpa.DeveloperRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'jpaSharedEM_entityManagerFactory'
DEBUG - Creating shared instance of singleton bean 'jpaMappingContext'
DEBUG - Initializing JpaMetamodelMappingContext…
DEBUG - Finished initializing JpaMetamodelMappingContext
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Statistics initialized [enabled=false]
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.DeveloperRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.DeveloperRepository.
DEBUG - Autowiring by type from bean name 'developerService' via constructor to bean named 'developerRepository'
DEBUG - Autowiring by type from bean name 'developerController' via constructor to bean named 'developerService'
DEBUG - Creating shared instance of singleton bean 'gameController'
DEBUG - Creating shared instance of singleton bean 'gameService'
DEBUG - Creating shared instance of singleton bean 'gameRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#1'
DEBUG - Creating shared instance of singleton bean 'jpa.GameRepository.fragments#0'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.GameRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.GameRepository.
DEBUG - Autowiring by type from bean name 'gameService' via constructor to bean named 'gameRepository'
DEBUG - Autowiring by type from bean name 'gameController' via constructor to bean named 'gameService'
DEBUG - Creating shared instance of singleton bean 'logController'
DEBUG - Creating shared instance of singleton bean 'secretController'
DEBUG - Creating shared instance of singleton bean 'userController'
DEBUG - Creating shared instance of singleton bean 'userService'
DEBUG - Creating shared instance of singleton bean 'userRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#2'
DEBUG - Creating shared instance of singleton bean 'jpa.UserRepository.fragments#0'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.UserRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query User.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy109.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query User.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.UserRepository.
DEBUG - Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
DEBUG - Autowiring by type from bean name 'userController' via constructor to bean named 'userService'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
DEBUG - Creating shared instance of singleton bean 'webSecurityCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#0'
DEBUG - Creating shared instance of singleton bean 'jpa.OrderRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'orderRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.OrderRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.OrderRepository.
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#4'
DEBUG - Creating shared instance of singleton bean 'jpa.AdminsRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'adminsRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.AdminsRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query Admins.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy109.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query Admins.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.AdminsRepository.
DEBUG - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskExecutorBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
DEBUG - Creating shared instance of singleton bean 'error'
DEBUG - Creating shared instance of singleton bean 'beanNameViewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'conventionErrorViewResolver'
DEBUG - Creating shared instance of singleton bean 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'basicErrorController'
DEBUG - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerRegistrationCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration'
DEBUG - Autowiring by type from bean name 'resourceHandlerRegistrationCustomizer' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
DEBUG - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'clientRegistrationRepository'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
DEBUG - Autowiring by type from bean name 'clientRegistrationRepository' via factory method to bean named 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
DEBUG - Creating shared instance of singleton bean 'authorizedClientRepository'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'authorizedClientService'
DEBUG - Autowiring by type from bean name 'authorizedClientService' via factory method to bean named 'clientRegistrationRepository'
DEBUG - Autowiring by type from bean name 'authorizedClientRepository' via factory method to bean named 'authorizedClientService'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG - Creating shared instance of singleton bean 'mvcValidator'
WARN  - HV000184: ParameterMessageInterpolator has been chosen, EL interpolation will not be supported
DEBUG - Failed to set up a Bean Validation provider
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:279)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:84)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG - Creating shared instance of singleton bean 'messageConverters'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'stringHttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
DEBUG - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
DEBUG - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
DEBUG - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Creating shared instance of singleton bean 'parameterNamesModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
DEBUG - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - @EnableAutoConfiguration was declared on a class in the package 'com.example.topgamesdata,com.example.topgameswebapi'. Automatic @Repository and @Entity scanning is enabled.
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
DEBUG - Creating shared instance of singleton bean 'jsonComponentModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonGeoModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
DEBUG - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'sortResolver'
DEBUG - Creating shared instance of singleton bean 'sortCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Creating shared instance of singleton bean 'pageableResolver'
DEBUG - Creating shared instance of singleton bean 'pageableCustomizer'
DEBUG - Creating shared instance of singleton bean 'applicationTaskExecutor'
DEBUG - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
DEBUG - Initializing ExecutorService 'applicationTaskExecutor'
DEBUG - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'localeResolver'
DEBUG - Creating shared instance of singleton bean 'themeResolver'
DEBUG - Creating shared instance of singleton bean 'flashMapManager'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 
	c.e.t.c.DeveloperController:
	{GET [/api/developer/getAll]}: getAllDevelopers()
DEBUG - 
	c.e.t.c.GameController:
	{DELETE [/api/game/delete/{id}]}: deleteGame(Long)
	{PUT [/api/game/update/{id}]}: updateGame(Game,Long)
	{POST [/api/game/add]}: createGame(Game)
	{POST [/api/game/dev/addSamples]}: addSamples()
	{GET [/api/game/getAll]}: getAllGames()
	{GET [/api/game/{id}]}: getGameById(Long)
	{POST [/api/game/dev/deleteAll]}: deleteAllGames()
DEBUG - 
	c.e.t.c.LogController:
	{GET [/logs/all]}: getLogs()
	{GET [/logs/info]}: getInfoLogs()
	{GET [/logs/warning]}: getWarningLogs()
	{GET [/logs/error]}: getErrorLogs()
	{GET [/logs/debug]}: getDebugLogs()
DEBUG - 
	c.e.t.c.SecretController:
	{GET [/secret]}: wowYouAreLoggedInSoCool()
DEBUG - 
	c.e.t.c.UserController:
	{POST [/api/user/add]}: createUser(User)
	{POST [/api/user/dev/addSamples]}: addSamples()
	{GET [/api/user/getAll]}: getAllUsers()
	{GET [/api/user/{id}]}: getUserById(Long)
	{DELETE [/api/user/delete/{id}]}: deleteUserById(Long)
	{PUT [/api/user/update/{id}]}: updateUserById(Long,User)
	{POST [/api/user/dev/deleteAll]}: deleteAllUsers()
DEBUG - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
DEBUG - 23 mappings in 'requestMappingHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcPatternParser'
DEBUG - Creating shared instance of singleton bean 'mvcUrlPathHelper'
DEBUG - Creating shared instance of singleton bean 'mvcPathMatcher'
DEBUG - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'beanNameHandlerMapping'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'beanNameHandlerMapping' {}
DEBUG - Creating shared instance of singleton bean 'routerFunctionMapping'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerMapping'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
DEBUG - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'handlerFunctionAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'handlerExceptionResolver'
DEBUG - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'mvcViewResolver'
DEBUG - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'viewNameTranslator'
DEBUG - Creating shared instance of singleton bean 'defaultViewResolver'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Creating shared instance of singleton bean 'mbeanExporter'
DEBUG - Creating shared instance of singleton bean 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'mbeanServer'
DEBUG - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@2a3046da
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
DEBUG - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
DEBUG - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'applicationAvailability'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'lifecycleProcessor'
DEBUG - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
DEBUG - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration$OAuth2SecurityFilterChainConfiguration'
DEBUG - Creating shared instance of singleton bean 'oauth2SecurityFilterChain'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'objectPostProcessor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
DEBUG - Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@751d3241'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
DEBUG - Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
DEBUG - Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
DEBUG - Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
DEBUG - Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'authenticationManagerBuilder'
DEBUG - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
DEBUG - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'authenticationEventPublisher'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
DEBUG - Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration'
DEBUG - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
DEBUG - Autowiring by type from bean name 'oauth2SecurityFilterChain' via factory method to bean named 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity'
INFO  - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54a5eff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29612ee2, org.springframework.security.web.context.SecurityContextHolderFilter@4e22dadb, org.springframework.security.web.header.HeaderWriterFilter@18419ab7, org.springframework.security.web.csrf.CsrfFilter@45f4c27c, org.springframework.security.web.authentication.logout.LogoutFilter@16160a37, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@74cad577, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2bbaf1bc, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@350ede1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@52518ee1, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@20524816, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a916120, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d91147b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a7cbeed, org.springframework.security.oauth2.client.web.OAuth2AuthorizationCodeGrantFilter@3f36c191, org.springframework.security.web.access.ExceptionTranslationFilter@69cc3370, org.springframework.security.web.access.intercept.AuthorizationFilter@31dbca5d]
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'delegatingApplicationListener'
DEBUG - Creating shared instance of singleton bean 'springSecurityFilterChain'
DEBUG - Creating shared instance of singleton bean 'mvcHandlerMappingIntrospector'
WARN  - You are asking Spring Security to ignore Mvc [pattern='/api/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
INFO  - Will not secure Mvc [pattern='/api/**']
WARN  - You are asking Spring Security to ignore Mvc [pattern='/logs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
INFO  - Will not secure Mvc [pattern='/logs/**']
DEBUG - Creating shared instance of singleton bean 'webSecurityExpressionHandler'
DEBUG - Creating shared instance of singleton bean 'privilegeEvaluator'
DEBUG - Creating shared instance of singleton bean 'requestDataValueProcessor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskSchedulerBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionTemplate'
DEBUG - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'multipartResolver'
DEBUG - Registering beans for JMX exposure on startup
DEBUG - Autodetecting user-defined JMX MBeans
DEBUG - Bean with name 'dataSource' has been autodetected for JMX exposure
DEBUG - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
DEBUG - Starting beans in phase -2147483647
DEBUG - Successfully started bean 'springBootLoggingLifecycle'
DEBUG - Starting beans in phase 2147481599
INFO  - Starting ProtocolHandler ["http-nio-8081"]
INFO  - Tomcat started on port(s): 8081 (http) with context path ''
DEBUG - Successfully started bean 'webServerStartStop'
DEBUG - Starting beans in phase 2147482623
DEBUG - Successfully started bean 'webServerGracefulShutdown'
DEBUG - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   OAuth2ClientRegistrationRepositoryConfiguration matched:
      - OAuth2 Clients Configured Condition found registered clients 806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com (ClientsConfiguredCondition)

   OAuth2ClientRegistrationRepositoryConfiguration#clientRegistrationRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) found bean 'clientRegistrationRepository' (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientService matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.OAuth2AuthorizedClientService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration.OAuth2SecurityFilterChainConfiguration matched:
      - AllNestedConditions 2 matched 0 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)
      - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) found beans of type 'org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean' &orderRepository, &gameRepository, &userRepository, &developerRepository, &adminsRepository and found beans of type 'org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension' org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0 (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
         - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' oauth2SecurityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' clientRegistrationRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



INFO  - Started TopgamesWebApiApplication in 9.087 seconds (process running for 10.47)
DEBUG - Application availability state LivenessState changed to CORRECT
DEBUG - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  - Initializing Servlet 'dispatcherServlet'
DEBUG - Detected StandardServletMultipartResolver
DEBUG - Detected AcceptHeaderLocaleResolver
DEBUG - Detected FixedThemeResolver
DEBUG - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@60317de8
DEBUG - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6d77d269
DEBUG - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
INFO  - Completed initialization in 9 ms
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
INFO  - Got all developers
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(98938836<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1984595450<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1143580532<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1236156424 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@1818443358 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@867866276 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@361ca69a]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7e4ccc46]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@396ef2c6]
DEBUG - Created new SQL alias : d1_0
DEBUG - Created new SQL alias : g1_0
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(68293757371010))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68293757390614))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68293757376639))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(68293757371010)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(68293757371010).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(68293757371010).name]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68293757390614)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68293757390614).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68293757390614).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68293757390614).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68293757390614).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68293757390614).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68293757390614).releaseDate]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68293757376639)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68293757376639).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68293757376639).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68293757376639).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68293757376639).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68293757376639).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(68293757371010)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68293757390614)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68293757376639)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(68293757376639) -> EntityResultInitializer(com.example.topgamesdata.model.User(68293757376639))@223234396 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG -     com.example.topgamesdata.model.Developer(68293757371010) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(68293757371010))@1681147192 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(68293757390614).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68293757390614).developer)@1741615794 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG -     com.example.topgamesdata.model.Game(68293757390614).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68293757390614).genre)@956409500 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(68293757390614).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68293757390614).platform)@278875008 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(68293757390614) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68293757390614))@1712641619 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1984595450<open>)]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1143580532<open>)]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(98938836<open>)]
DEBUG - committing
DEBUG - committing
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@867866276 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1236156424 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1818443358 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#addSamples()
DEBUG - POST "/api/game/dev/addSamples", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#addSamples()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Adding sample games
DEBUG - Found thread-bound EntityManager [SessionImpl(1631960641<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@657a36b1]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 1
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 1
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 2
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 2
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 3
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 3
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 4
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 4
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 5
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 5
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 6
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 6
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1631960641<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#1], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#1], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#2], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#2], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#3], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#3], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#4], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#4], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#5], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#5], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#6], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#6], was: [<unreferenced>] (initialized)
DEBUG - Flushed: 0 insertions, 0 updates, 0 deletions to 12 objects
DEBUG - Flushed: 12 (re)creations, 0 updates, 0 removals to 12 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.Developer{country=Japan, name=FromSoftware, id=6}
DEBUG - com.example.topgamesdata.model.Developer{country=Canada, name=Ubisoft Montreal, id=5}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Naughty Dog, id=2}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Santa Monica Studio, id=1}
DEBUG - com.example.topgamesdata.model.Developer{country=Poland, name=CD Projekt Red, id=4}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Rockstar Games, id=3}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2011-09-22T00:00, genre=[ACTION, ADVENTURE], name=Dark Souls, description=Cool game, developer=com.example.topgamesdata.model.Developer#6, id=6, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2020-11-10T00:00, genre=[ACTION, ADVENTURE], name=Assassin's Creed Valhalla, description=A game about a viking, developer=com.example.topgamesdata.model.Developer#5, id=5, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2013-06-14T00:00, genre=[ACTION, ADVENTURE], name=The Last of Us, description=Cool game, developer=com.example.topgamesdata.model.Developer#2, id=2, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-04-20T00:00, genre=[ACTION, ADVENTURE], name=God of War, description=Cool game, developer=com.example.topgamesdata.model.Developer#1, id=1, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2015-05-18T00:00, genre=[ACTION, ADVENTURE, RPG, OPEN_WORLD], name=The Witcher 3: Wild Hunt, description=A game about a witcher, developer=com.example.topgamesdata.model.Developer#4, id=4, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-10-26T00:00, genre=[ACTION, ADVENTURE], name=Red Dead Redemption 2, description=A game about a cowboy, developer=com.example.topgamesdata.model.Developer#3, id=3, platform=[PLAYSTATION]}
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 4 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["ok"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - HHH000420: Closing un-released batch
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(4498881<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Setting JDBC Connection [HikariProxyConnection@243485625 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(976219232<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Setting JDBC Connection [HikariProxyConnection@887625045 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@abcceb1]
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Created new SQL alias : g1_0
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@30d78710]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68298229246978))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Created new SQL alias : u1_0
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68298229246978)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68298229246978).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68298229246978).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68298229246978).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68298229246978).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68298229246978).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68298229246978).releaseDate]

DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68298230151954))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68298229246978)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68298230151954)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68298230151954).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68298230151954).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68298230151954).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68298230151954).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68298230151954).username]

DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68298230151954)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG -     com.example.topgamesdata.model.Game(68298229246978).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68298229246978).developer)@798080717 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG -     com.example.topgamesdata.model.Game(68298229246978).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68298229246978).genre)@1241441633 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG -     com.example.topgamesdata.model.Game(68298229246978).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68298229246978).platform)@1763613588 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(68298229246978) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68298229246978))@161142221 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - Initializer list
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG -     com.example.topgamesdata.model.User(68298230151954) -> EntityResultInitializer(com.example.topgamesdata.model.User(68298230151954))@368762913 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
INFO  - Got all developers
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Found thread-bound EntityManager [SessionImpl(1956513146<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@2052715929 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(976219232<open>)]
DEBUG - committing
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7e666e0a]
DEBUG - Created new SQL alias : d1_0
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@887625045 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(68298235620952))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(68298235620952)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(68298235620952).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(68298235620952).name]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(68298235620952)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(68298235620952) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(68298235620952))@1531642093 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68298229246978)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Completed 200 OK
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(68298235620952)): 1
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).platform#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(68298235620952)#1] : com.example.topgamesdata.model.Developer@175b27ff
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68298229246978)#1] : com.example.topgamesdata.model.Game@13014beb
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68298229246978).developer#1) : 1
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(68298235620952)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f18b67f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(68298235620952)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(68298235620952)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(68298235620952)#2] : com.example.topgamesdata.model.Developer@4144832
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(68298235620952)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f18b67f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(68298235620952)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(68298235620952)): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(68298235620952)#3] : com.example.topgamesdata.model.Developer@5dcc60e
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(68298235620952)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f18b67f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(68298235620952)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(68298235620952)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(68298235620952)#4] : com.example.topgamesdata.model.Developer@1fed3384
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(68298235620952)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f18b67f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(68298235620952)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(68298235620952)): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(68298235620952)#5] : com.example.topgamesdata.model.Developer@1cca5248
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(68298235620952)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f18b67f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(68298235620952)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer(68298235620952)): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer(68298235620952)#6] : com.example.topgamesdata.model.Developer@3a39dc3b
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer(68298235620952)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f18b67f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer(68298235620952)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1956513146<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2052715929 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@136723309 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Writing [[com.example.topgamesdata.model.Developer@175b27ff, com.example.topgamesdata.model.Developer@4144832 (truncated)...]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@424085e6
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b842390
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68298229246978).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68298229246978)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3266775c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68298229246978)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68298229246978)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68298229246978)#2] : com.example.topgamesdata.model.Game@6e782427
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68298229246978).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1864720931 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@436bf0e3
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79bb6d7
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68298229246978).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68298229246978)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3266775c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68298229246978)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68298229246978)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68298229246978)#3] : com.example.topgamesdata.model.Game@35e47525
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68298229246978).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@742691412 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@26209856
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e7e68f4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68298229246978).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68298229246978)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3266775c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68298229246978)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68298229246978)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68298229246978)#4] : com.example.topgamesdata.model.Game@532220a0
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68298229246978).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@400164294 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@712407f3
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3697d824
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68298229246978).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68298229246978)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3266775c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68298229246978)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68298229246978)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68298229246978)#5] : com.example.topgamesdata.model.Game@320c8b1b
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68298229246978).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1919438817 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@21edb0f7
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11cae46c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68298229246978).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68298229246978)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3266775c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68298229246978)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68298229246978)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68298229246978).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68298229246978)#6] : com.example.topgamesdata.model.Game@5cd393a0
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68298229246978).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@750803294 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@135631a4
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d728039
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68298229246978).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68298229246978)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3266775c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68298229246978)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(4498881<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@243485625 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@13014beb, com.example.topgamesdata.model.Game@6e782427, com.exa (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [CollectionTableGroup(com.example.topgamesdata.model.Game.genre)] with identifierForTableGroup [com.example.topgamesdata.model.Game.genre] for NavigablePath [com.example.topgamesdata.model.Game.genre] 
DEBUG - Generating Fetch for collection-part : `com.example.topgamesdata.model.Game.genre` -> `{element}`
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@519234820 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@604954289
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@604954289
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1ea6e90b
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@604954289
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@604954289
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@604954289
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1ea6e90b
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - Created new SQL alias : p1_0
DEBUG - Registration of TableGroup [CollectionTableGroup(com.example.topgamesdata.model.Game.platform)] with identifierForTableGroup [com.example.topgamesdata.model.Game.platform] for NavigablePath [com.example.topgamesdata.model.Game.platform] 
DEBUG - Generating Fetch for collection-part : `com.example.topgamesdata.model.Game.platform` -> `{element}`
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1297264587 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@2001989761
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@2001989761
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@702cc2ac
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1963563664 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1713747501
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1713747501
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3595e84a
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1713747501
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1713747501
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1713747501
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3595e84a
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@327527145 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@614307398
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@614307398
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@772269a8
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@625274608 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1935888745
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1935888745
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@67a1e3b4
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1935888745
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1935888745
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1935888745
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@67a1e3b4
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1895079330 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@1871923982
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@1871923982
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@539ba837
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@337531881 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@70ee608c
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@70ee608c
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@70ee608c
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@746983338
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@70ee608c
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@325459014 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@247910468
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@247910468
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@64768699
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@481395698 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1805171602
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1805171602
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1500c1c7
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1805171602
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1805171602
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1805171602
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1500c1c7
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@2082761331 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@978465421
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@978465421
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@20a05229
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@869831458 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1448777011
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1448777011
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@18aa2dd9
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1448777011
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1448777011
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1448777011
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@18aa2dd9
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1166203317 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@444398855
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@444398855
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1594d028
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#deleteAllGames()
DEBUG - POST "/api/game/dev/deleteAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#deleteAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Deleting all games
DEBUG - Found thread-bound EntityManager [SessionImpl(1988305947<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7844d4bb]
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68301687241459))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68301687241459)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68301687241459).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68301687241459).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68301687241459).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68301687241459).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68301687241459).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68301687241459).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68301687241459)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(68301687241459).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68301687241459).developer)@783054660 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG -     com.example.topgamesdata.model.Game(68301687241459).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68301687241459).genre)@1498816975 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(68301687241459).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68301687241459).platform)@590084987 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(68301687241459) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68301687241459))@2029212958 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68301687241459)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).platform#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68301687241459)#1] : com.example.topgamesdata.model.Game@3628c5b7
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68301687241459).developer#1) : 1
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@734832350 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@76799118
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38cd335f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68301687241459).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68301687241459)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d1a115e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68301687241459)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68301687241459)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68301687241459)#2] : com.example.topgamesdata.model.Game@73b0155c
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68301687241459).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@508390037 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@824120a
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d48d859
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68301687241459).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68301687241459)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d1a115e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68301687241459)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68301687241459)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68301687241459)#3] : com.example.topgamesdata.model.Game@765a4eb8
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68301687241459).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1171395454 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@2eddb9ac
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc116ea
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68301687241459).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68301687241459)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d1a115e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68301687241459)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68301687241459)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68301687241459)#4] : com.example.topgamesdata.model.Game@49fd7f7e
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68301687241459).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1119911819 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@3d58463c
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ca54a3b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68301687241459).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68301687241459)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d1a115e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68301687241459)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68301687241459)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68301687241459)#5] : com.example.topgamesdata.model.Game@d8fee5f
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68301687241459).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@677604607 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@136bf964
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20dc6b62
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68301687241459).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68301687241459)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d1a115e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68301687241459)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(68301687241459)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(68301687241459).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(68301687241459)#6] : com.example.topgamesdata.model.Game@29f66b65
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(68301687241459).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@352851288 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@20172c27
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75e05fa8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(68301687241459).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(68301687241459)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d1a115e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(68301687241459)#6] - using loading instance
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1988305947<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - Collection dereferenced: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Flushed: 0 insertions, 0 updates, 12 deletions to 12 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 12 removals to 12 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.Developer{country=Japan, name=FromSoftware, id=6}
DEBUG - com.example.topgamesdata.model.Developer{country=Canada, name=Ubisoft Montreal, id=5}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Naughty Dog, id=2}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Santa Monica Studio, id=1}
DEBUG - com.example.topgamesdata.model.Developer{country=Poland, name=CD Projekt Red, id=4}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Rockstar Games, id=3}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2011-09-22T00:00, genre=<uninitialized>, name=Dark Souls, description=Cool game, developer=com.example.topgamesdata.model.Developer#6, id=6, platform=<uninitialized>}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2020-11-10T00:00, genre=<uninitialized>, name=Assassin's Creed Valhalla, description=A game about a viking, developer=com.example.topgamesdata.model.Developer#5, id=5, platform=<uninitialized>}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2013-06-14T00:00, genre=<uninitialized>, name=The Last of Us, description=Cool game, developer=com.example.topgamesdata.model.Developer#2, id=2, platform=<uninitialized>}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-04-20T00:00, genre=<uninitialized>, name=God of War, description=Cool game, developer=com.example.topgamesdata.model.Developer#1, id=1, platform=<uninitialized>}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2015-05-18T00:00, genre=<uninitialized>, name=The Witcher 3: Wild Hunt, description=A game about a witcher, developer=com.example.topgamesdata.model.Developer#4, id=4, platform=<uninitialized>}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-10-26T00:00, genre=<uninitialized>, name=Red Dead Redemption 2, description=A game about a cowboy, developer=com.example.topgamesdata.model.Developer#3, id=3, platform=<uninitialized>}
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - delete from game_genre where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - delete from game_platform where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - delete from game_genre where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - delete from game_platform where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - delete from game_genre where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - delete from game_platform where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - delete from game_genre where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - delete from game_platform where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - delete from game_genre where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - delete from game_platform where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - delete from game_genre where game_id=?
DEBUG - Done deleting collection
DEBUG - Deleting collection: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - delete from game_platform where game_id=?
DEBUG - Done deleting collection
DEBUG - delete from game where id=?
DEBUG - delete from developer where id=?
DEBUG - delete from game where id=?
DEBUG - delete from developer where id=?
DEBUG - delete from game where id=?
DEBUG - delete from developer where id=?
DEBUG - delete from game where id=?
DEBUG - delete from developer where id=?
DEBUG - delete from game where id=?
DEBUG - delete from developer where id=?
DEBUG - delete from game where id=?
DEBUG - delete from developer where id=?
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["ok"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - HHH000420: Closing un-released batch
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
INFO  - Got all games
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(475907980<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1453648541<open>)] for JPA transaction
DEBUG - Setting JDBC Connection [HikariProxyConnection@312097399 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1482890809 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16a5acfc]
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5c5c81ed]
DEBUG - Created new SQL alias : g1_0
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68302071454854))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Created new SQL alias : u1_0
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68302071454854)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68302071454854).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68302071454854).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68302071454854).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68302071454854).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68302071454854).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68302071454854).releaseDate]

DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68302072185855))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
INFO  - Got all developers
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68302071454854)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Found thread-bound EntityManager [SessionImpl(1199896020<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68302072185855)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68302072185855).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68302072185855).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68302072185855).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68302072185855).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68302072185855).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68302072185855)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(68302071454854).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68302071454854).developer)@864603907 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG -     com.example.topgamesdata.model.Game(68302071454854).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68302071454854).genre)@895150357 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG -     com.example.topgamesdata.model.Game(68302071454854).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68302071454854).platform)@652868701 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - Initializer list
DEBUG - Setting JDBC Connection [HikariProxyConnection@225338258 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff] read-only
DEBUG -     com.example.topgamesdata.model.User(68302072185855) -> EntityResultInitializer(com.example.topgamesdata.model.User(68302072185855))@2037508941 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG -     com.example.topgamesdata.model.Game(68302071454854) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68302071454854))@1111732142 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3549d40a]
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(475907980<open>)]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1453648541<open>)]
DEBUG - committing
DEBUG - committing
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(68302075349058))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@312097399 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(68302075349058)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(68302075349058).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(68302075349058).name]

DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1482890809 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(68302075349058)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(68302075349058) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(68302075349058))@1383104406 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1199896020<open>)]
DEBUG - committing
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@225338258 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - POST "/api/user/add", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.User@15822bc]
INFO  - User  was created
DEBUG - Found thread-bound EntityManager [SessionImpl(1321417630<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4fa1825a]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next_val as id_val from user_seq for update
DEBUG - update user_seq set next_val= ? where next_val=?
DEBUG - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1321417630<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=1, email=, username=}
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [com.example.topgamesdata.model.User@15822bc]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(325294978<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1207630192 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@29f9c7ab]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68304431862438))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68304431862438)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68304431862438).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68304431862438).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68304431862438).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68304431862438).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68304431862438).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68304431862438)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(68304431862438) -> EntityResultInitializer(com.example.topgamesdata.model.User(68304431862438))@1912776902 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(68304431862438)): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(68304431862438)#1] : com.example.topgamesdata.model.User@328501b6
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(68304431862438)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55a6dbb8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(68304431862438)#1] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(325294978<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1207630192 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@328501b6]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - DELETE "/api/user/delete/1", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(194776520<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@452403df]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User -> EntityResultInitializer(com.example.topgamesdata.model.User)@1734057039 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User#1] : com.example.topgamesdata.model.User@31f6c93
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@389d315b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User#1] - using loading instance
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(194776520<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=1, email=, username=}
DEBUG - delete from user where id=?
DEBUG - Not closing pre-bound JPA EntityManager after transaction
WARN  - User with id 1 was deleted
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["User deleted"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(1725491120<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Setting JDBC Connection [HikariProxyConnection@1727568838 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1083709526<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Setting JDBC Connection [HikariProxyConnection@1099454106 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@555e12a1]
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68306316855268))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@525f7e36]
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68306316855268)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68306316855268).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68306316855268).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68306316855268).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68306316855268).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68306316855268).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68306316855268).releaseDate]

DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68306316855268)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Created new SQL alias : u1_0
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68306318197262))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Initializer list
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG -     com.example.topgamesdata.model.Game(68306316855268).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68306316855268).developer)@228841914 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68306318197262)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68306318197262).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68306318197262).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68306318197262).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68306318197262).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68306318197262).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68306318197262)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG -     com.example.topgamesdata.model.Game(68306316855268).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68306316855268).genre)@2006493113 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(68306316855268).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68306316855268).platform)@197117861 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(68306316855268) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68306316855268))@612368283 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
INFO  - Got all developers
DEBUG - Found thread-bound EntityManager [SessionImpl(2101343893<open>)] for JPA transaction
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Initializer list
DEBUG - Setting JDBC Connection [HikariProxyConnection@897528561 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff] read-only
DEBUG -     com.example.topgamesdata.model.User(68306318197262) -> EntityResultInitializer(com.example.topgamesdata.model.User(68306318197262))@14110549 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1725491120<open>)]
DEBUG - committing
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a730a1f]
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1083709526<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1727568838 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(68306325000450))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(68306325000450)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(68306325000450).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(68306325000450).name]

DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1099454106 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(68306325000450)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG -     com.example.topgamesdata.model.Developer(68306325000450) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(68306325000450))@937228693 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(2101343893<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@897528561 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - POST "/api/user/add", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.User@2df74f3e]
INFO  - User 123 was created
DEBUG - Found thread-bound EntityManager [SessionImpl(929391495<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@547d15c8]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next_val as id_val from user_seq for update
DEBUG - update user_seq set next_val= ? where next_val=?
DEBUG - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(929391495<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=123, lastName=123, password=123, id=2, email=123, username=123}
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [com.example.topgamesdata.model.User@2df74f3e]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(297048434<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@468333198 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4eef9b1a]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68358547892084))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68358547892084)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68358547892084).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68358547892084).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68358547892084).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68358547892084).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68358547892084).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68358547892084)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(68358547892084) -> EntityResultInitializer(com.example.topgamesdata.model.User(68358547892084))@328911662 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(68358547892084)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(68358547892084)#2] : com.example.topgamesdata.model.User@433ea50c
DEBUG - Extracted JDBC value [1] - [123]
DEBUG - Extracted JDBC value [2] - [123]
DEBUG - Extracted JDBC value [3] - [123]
DEBUG - Extracted JDBC value [4] - [123]
DEBUG - Extracted JDBC value [5] - [123]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(68358547892084)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b8d5fe
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(68358547892084)#2] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(297048434<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@468333198 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@433ea50c]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#updateUserById(Long, User)
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#updateUserById(Long, User)
DEBUG - PUT "/api/user/update/2", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#updateUserById(Long, User)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.User@2bba97d9]
INFO  - User with id 2 was updated
DEBUG - Found thread-bound EntityManager [SessionImpl(142496189<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@658545147 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@46a8f11f]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User -> EntityResultInitializer(com.example.topgamesdata.model.User)@970175052 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User#2] : com.example.topgamesdata.model.User@61d70cab
DEBUG - Extracted JDBC value [1] - [123]
DEBUG - Extracted JDBC value [2] - [123]
DEBUG - Extracted JDBC value [3] - [123]
DEBUG - Extracted JDBC value [4] - [123]
DEBUG - Extracted JDBC value [5] - [123]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45b2830f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User#2] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(142496189<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@658545147 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(142496189<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6dc586]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(142496189<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=2, email=, username=}
DEBUG - update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [com.example.topgamesdata.model.User@61d70cab]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1830527695<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@60747165 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a45f2a6]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68361907528775))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68361907528775)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68361907528775).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68361907528775).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68361907528775).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68361907528775).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68361907528775).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68361907528775)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(68361907528775) -> EntityResultInitializer(com.example.topgamesdata.model.User(68361907528775))@248550969 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(68361907528775)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(68361907528775)#2] : com.example.topgamesdata.model.User@8d78b6d
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(68361907528775)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2bca510
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(68361907528775)#2] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1830527695<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@60747165 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@8d78b6d]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - DELETE "/api/user/delete/2", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(672185497<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@43a74b54]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User -> EntityResultInitializer(com.example.topgamesdata.model.User)@2065506681 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User#2] : com.example.topgamesdata.model.User@3fec2e83
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d68d6ee
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User#2] - using loading instance
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(672185497<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=2, email=, username=}
DEBUG - delete from user where id=?
DEBUG - Not closing pre-bound JPA EntityManager after transaction
WARN  - User with id 2 was deleted
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["User deleted"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(1694646738<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1416637843 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff] read-only
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@22f82edd]
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1664427658<open>)] for JPA transaction
DEBUG - Created new SQL alias : g1_0
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68363728411952))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Setting JDBC Connection [HikariProxyConnection@1626435038 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all developers
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - Found thread-bound EntityManager [SessionImpl(1382274228<open>)] for JPA transaction
DEBUG - begin
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68363728411952)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68363728411952).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68363728411952).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68363728411952).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68363728411952).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68363728411952).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68363728411952).releaseDate]

DEBUG - Setting JDBC Connection [HikariProxyConnection@15933133 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68363728411952)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3884e7b]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(68363728411952).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68363728411952).developer)@526867805 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG -     com.example.topgamesdata.model.Game(68363728411952).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68363728411952).genre)@104858012 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(68363728411952).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68363728411952).platform)@124190163 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(68363728411952) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68363728411952))@262672845 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68363730064883))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68363730064883)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68363730064883).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68363730064883).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68363730064883).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68363730064883).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68363730064883).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68363730064883)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initiating transaction commit
DEBUG - Initializer list
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1694646738<open>)]
DEBUG - committing
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@64544c0]
DEBUG -     com.example.topgamesdata.model.User(68363730064883) -> EntityResultInitializer(com.example.topgamesdata.model.User(68363730064883))@1312803173 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Created new SQL alias : d1_0
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1416637843 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(68363731268724))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1664427658<open>)]
DEBUG - committing
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(68363731268724)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(68363731268724).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(68363731268724).name]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(68363731268724)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(68363731268724) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(68363731268724))@627729252 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1626435038 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Writing [[]]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1382274228<open>)]
DEBUG - committing
DEBUG - Completed 200 OK
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@15933133 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getLogs()
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getLogs()
DEBUG - GET "/logs/all", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[DEBUG - Creating shared instance of singleton bean 'securityConfiguration', DEBUG - Creating shared (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getInfoLogs()
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getInfoLogs()
DEBUG - GET "/logs/info", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getInfoLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[INFO  - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilt (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getWarningLogs()
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getWarningLogs()
DEBUG - GET "/logs/warning", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getWarningLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getDebugLogs()
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getDebugLogs()
DEBUG - GET "/logs/debug", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getDebugLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[DEBUG - Creating shared instance of singleton bean 'securityConfiguration', DEBUG - Creating shared (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - GET "/api/developer/getAll", parameters={}
INFO  - Got all users
INFO  - Got all games
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Found thread-bound EntityManager [SessionImpl(801817219<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1127131726<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
INFO  - Got all developers
DEBUG - Found thread-bound EntityManager [SessionImpl(2035218002<open>)] for JPA transaction
DEBUG - Setting JDBC Connection [HikariProxyConnection@2006375845 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4] read-only
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@73537138 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@357584747 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@77c0239e]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10657262]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@38122024]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(68391478599817))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Created new SQL alias : g1_0
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(68391478599664))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(68391478629537))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(68391478599817)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68391478599817).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68391478599817).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68391478599817).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(68391478599817).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(68391478599817).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(68391478599817)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(68391478629537)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(68391478629537).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(68391478629537).name]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(68391478599664)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68391478599664).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(68391478599664).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68391478599664).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(68391478599664).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(68391478599664).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(68391478599664).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(68391478599664)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(68391478629537)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(68391478629537) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(68391478629537))@280516407 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(68391478599817) -> EntityResultInitializer(com.example.topgamesdata.model.User(68391478599817))@944003599 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG -     com.example.topgamesdata.model.Game(68391478599664).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(68391478599664).developer)@1201263116 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@631459295)
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG -     com.example.topgamesdata.model.Game(68391478599664).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68391478599664).genre)@115892509 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(68391478599664).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(68391478599664).platform)@1381738674 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(68391478599664) -> EntityResultInitializer(com.example.topgamesdata.model.Game(68391478599664))@1368147910 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Initiating transaction commit
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(801817219<open>)]
DEBUG - committing
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(2035218002<open>)]
DEBUG - committing
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1127131726<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@357584747 wrapping com.mysql.cj.jdbc.ConnectionImpl@145a821d]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@73537138 wrapping com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2006375845 wrapping com.mysql.cj.jdbc.ConnectionImpl@19ebfac4]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Saved request http://localhost:8081/?continue to session
DEBUG - Trying to match using And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], Not [And [Or [Ant [pattern='/login'], Ant [pattern='/favicon.ico']], And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@1d6014a7, matchingMediaTypes=[application/xhtml+xml, image/*, text/html, text/plain], useEquals=false, ignoredMediaTypes=[*/*]]]]], org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$$Lambda$1493/0x00000008014d54b0@4717f453]
DEBUG - Match found! Executing org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint@346715ff
DEBUG - Redirecting to http://localhost:8081/oauth2/authorization/google
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Saved request http://localhost:8081/?continue to session
DEBUG - Trying to match using And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], Not [And [Or [Ant [pattern='/login'], Ant [pattern='/favicon.ico']], And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@1d6014a7, matchingMediaTypes=[application/xhtml+xml, image/*, text/html, text/plain], useEquals=false, ignoredMediaTypes=[*/*]]]]], org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$$Lambda$1493/0x00000008014d54b0@4717f453]
DEBUG - Match found! Executing org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint@346715ff
DEBUG - Redirecting to http://localhost:8081/oauth2/authorization/google
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /oauth2/authorization/google
DEBUG - Redirecting to https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com&scope=openid%20profile%20email&state=2-UM5-Km6WSxzK3_xkAtpU2d_qrfNrvWJCZdsporBgA%3D&redirect_uri=http://localhost:8081/login/oauth2/code/google&nonce=tz2BbKgIw2bsFp0S6o5S48m34yv1_TvCvHQuLRRZZFY
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Securing GET /secret?continue
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Saved request http://localhost:8081/secret?continue&continue to session
DEBUG - Trying to match using And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], Not [And [Or [Ant [pattern='/login'], Ant [pattern='/favicon.ico']], And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@1d6014a7, matchingMediaTypes=[application/xhtml+xml, image/*, text/html, text/plain], useEquals=false, ignoredMediaTypes=[*/*]]]]], org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$$Lambda$1493/0x00000008014d54b0@4717f453]
DEBUG - Match found! Executing org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint@346715ff
DEBUG - Redirecting to http://localhost:8081/oauth2/authorization/google
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /oauth2/authorization/google
DEBUG - Redirecting to https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com&scope=openid%20profile%20email&state=OinvtEH5pziype-Dg4_EIietmNsxQJg0BcUYs5QDa2A%3D&redirect_uri=http://localhost:8081/login/oauth2/code/google&nonce=iuMvskYfHvQj_X09H7qGy3rTdSm_L0CYkza5ENuMlvI
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Securing GET /secret
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Saved request http://localhost:8081/secret?continue to session
DEBUG - Trying to match using And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], Not [And [Or [Ant [pattern='/login'], Ant [pattern='/favicon.ico']], And [Not [RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]], MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@1d6014a7, matchingMediaTypes=[application/xhtml+xml, image/*, text/html, text/plain], useEquals=false, ignoredMediaTypes=[*/*]]]]], org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$$Lambda$1493/0x00000008014d54b0@4717f453]
DEBUG - Match found! Executing org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint@346715ff
DEBUG - Redirecting to http://localhost:8081/oauth2/authorization/google
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /oauth2/authorization/google
DEBUG - Redirecting to https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com&scope=openid%20profile%20email&state=GwoBm6-pJoDL0a7CJQ4_eIxddfdvooThU7j2Izdd0K8%3D&redirect_uri=http://localhost:8081/login/oauth2/code/google&nonce=TO8q49pV8W3rFrvXuvuvECxtZmvcgfwLacqfa5J50Q4
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /login/oauth2/code/google?state=GwoBm6-pJoDL0a7CJQ4_eIxddfdvooThU7j2Izdd0K8%3D&code=4/0AWtgzh5aPosd_8qRwJFA3gWErCxkyxHzKmghKyqY8YO0o0vkA97bjIEL4y_pdfABdVz2cA&scope=email%20profile%20openid%20https://www.googleapis.com/auth/userinfo.email%20https://www.googleapis.com/auth/userinfo.profile&authuser=0&hd=pjwstk.edu.pl&prompt=none
DEBUG - HTTP POST https://www.googleapis.com/oauth2/v4/token
DEBUG - Accept=[application/json, application/*+json]
DEBUG - Writing [{grant_type=[authorization_code], code=[4/0AWtgzh5aPosd_8qRwJFA3gWErCxkyxHzKmghKyqY8YO0o0vkA97bjIEL4y_pdfABdVz2cA], redirect_uri=[http://localhost:8081/login/oauth2/code/google]}] as "application/x-www-form-urlencoded;charset=UTF-8"
DEBUG - Response 200 OK
DEBUG - Reading to [org.springframework.security.oauth2.core.endpoint.OAuth2AccessTokenResponse] as "application/json;charset=utf-8"
DEBUG - HTTP GET https://www.googleapis.com/oauth2/v3/certs
DEBUG - Accept=[text/plain, application/json, application/*+json, */*]
DEBUG - Response 200 OK
DEBUG - Reading to [java.lang.String] as "application/json;charset=UTF-8"
DEBUG - Changed session id from 19FF29F55489EE1873FDD57C37853A21
DEBUG - Stored SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=Name: [115468241347308553680], Granted Authorities: [[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]], User Attributes: [{at_hash=x8Zu_s1jE-Vt1SJlCZxf4A, sub=115468241347308553680, email_verified=true, iss=https://accounts.google.com, given_name=Jakub, locale=pl, nonce=TO8q49pV8W3rFrvXuvuvECxtZmvcgfwLacqfa5J50Q4, picture=https://lh3.googleusercontent.com/a/AEdFTp42MTS-ymYRUlY83NLRThOrcw8pZ12D8UQ4qJdR=s96-c, aud=[806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com], azp=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com, name=Jakub Konkol, hd=pjwstk.edu.pl, exp=2023-01-27T16:51:39Z, family_name=Konkol, iat=2023-01-27T15:51:39Z, email=s24406@pjwstk.edu.pl}], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=19FF29F55489EE1873FDD57C37853A21], Granted Authorities=[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@6c104f7f]
DEBUG - Set SecurityContextHolder to OAuth2AuthenticationToken [Principal=Name: [115468241347308553680], Granted Authorities: [[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]], User Attributes: [{at_hash=x8Zu_s1jE-Vt1SJlCZxf4A, sub=115468241347308553680, email_verified=true, iss=https://accounts.google.com, given_name=Jakub, locale=pl, nonce=TO8q49pV8W3rFrvXuvuvECxtZmvcgfwLacqfa5J50Q4, picture=https://lh3.googleusercontent.com/a/AEdFTp42MTS-ymYRUlY83NLRThOrcw8pZ12D8UQ4qJdR=s96-c, aud=[806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com], azp=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com, name=Jakub Konkol, hd=pjwstk.edu.pl, exp=2023-01-27T16:51:39Z, family_name=Konkol, iat=2023-01-27T15:51:39Z, email=s24406@pjwstk.edu.pl}], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=19FF29F55489EE1873FDD57C37853A21], Granted Authorities=[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]
DEBUG - Redirecting to http://localhost:8081/secret?continue
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Securing GET /secret?continue
DEBUG - Retrieved SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=Name: [115468241347308553680], Granted Authorities: [[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]], User Attributes: [{at_hash=x8Zu_s1jE-Vt1SJlCZxf4A, sub=115468241347308553680, email_verified=true, iss=https://accounts.google.com, given_name=Jakub, locale=pl, nonce=TO8q49pV8W3rFrvXuvuvECxtZmvcgfwLacqfa5J50Q4, picture=https://lh3.googleusercontent.com/a/AEdFTp42MTS-ymYRUlY83NLRThOrcw8pZ12D8UQ4qJdR=s96-c, aud=[806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com], azp=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com, name=Jakub Konkol, hd=pjwstk.edu.pl, exp=2023-01-27T16:51:39Z, family_name=Konkol, iat=2023-01-27T15:51:39Z, email=s24406@pjwstk.edu.pl}], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=19FF29F55489EE1873FDD57C37853A21], Granted Authorities=[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]]
DEBUG - Secured GET /secret?continue
DEBUG - GET "/secret?continue", parameters={masked}
DEBUG - Mapped to com.example.topgameswebapi.controller.SecretController#wowYouAreLoggedInSoCool()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'text/html', given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["<h1> This is secret endpoint for logged in users :))) </h1> <br> <marquee> <h2> Wow, so cool! </h2>  (truncated)..."]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Securing GET /favicon.ico
DEBUG - Retrieved SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=Name: [115468241347308553680], Granted Authorities: [[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]], User Attributes: [{at_hash=x8Zu_s1jE-Vt1SJlCZxf4A, sub=115468241347308553680, email_verified=true, iss=https://accounts.google.com, given_name=Jakub, locale=pl, nonce=TO8q49pV8W3rFrvXuvuvECxtZmvcgfwLacqfa5J50Q4, picture=https://lh3.googleusercontent.com/a/AEdFTp42MTS-ymYRUlY83NLRThOrcw8pZ12D8UQ4qJdR=s96-c, aud=[806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com], azp=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com, name=Jakub Konkol, hd=pjwstk.edu.pl, exp=2023-01-27T16:51:39Z, family_name=Konkol, iat=2023-01-27T15:51:39Z, email=s24406@pjwstk.edu.pl}], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=19FF29F55489EE1873FDD57C37853A21], Granted Authorities=[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]]
DEBUG - Secured GET /favicon.ico
DEBUG - GET "/favicon.ico", parameters={}
DEBUG - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Resource not found
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 404 NOT_FOUND
DEBUG - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
DEBUG - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
DEBUG - Securing GET /error
DEBUG - Retrieved SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=Name: [115468241347308553680], Granted Authorities: [[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]], User Attributes: [{at_hash=x8Zu_s1jE-Vt1SJlCZxf4A, sub=115468241347308553680, email_verified=true, iss=https://accounts.google.com, given_name=Jakub, locale=pl, nonce=TO8q49pV8W3rFrvXuvuvECxtZmvcgfwLacqfa5J50Q4, picture=https://lh3.googleusercontent.com/a/AEdFTp42MTS-ymYRUlY83NLRThOrcw8pZ12D8UQ4qJdR=s96-c, aud=[806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com], azp=806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com, name=Jakub Konkol, hd=pjwstk.edu.pl, exp=2023-01-27T16:51:39Z, family_name=Konkol, iat=2023-01-27T15:51:39Z, email=s24406@pjwstk.edu.pl}], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=19FF29F55489EE1873FDD57C37853A21], Granted Authorities=[OIDC_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]]
DEBUG - Secured GET /error
DEBUG - "ERROR" dispatch for GET "/error", parameters={}
DEBUG - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
DEBUG - Writing [{timestamp=Fri Jan 27 16:51:40 CET 2023, status=404, error=Not Found, path=/favicon.ico}]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Exiting from "ERROR" dispatch, status 404
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m18s721ms).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53s750ms).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m15s976ms).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m19s412ms).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m21s113ms).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
DEBUG - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68ead359, started on Fri Jan 27 16:49:37 CET 2023
DEBUG - Stopping beans in phase 2147482623
DEBUG - Bean 'webServerGracefulShutdown' completed its stop procedure
DEBUG - Stopping beans in phase 2147481599
DEBUG - Bean 'webServerStartStop' completed its stop procedure
DEBUG - Stopping beans in phase -2147483647
DEBUG - Bean 'springBootLoggingLifecycle' completed its stop procedure
DEBUG - Unregistering JMX-exposed beans on shutdown
DEBUG - Unregistering JMX-exposed beans
DEBUG - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
DEBUG - HHH000031: Closing
DEBUG - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6bc6ed0a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@fb2c2f3]
DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
INFO  - HikariPool-1 - Shutdown initiated...
DEBUG - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@145a821d: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@19ebfac4: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58d6f0ff: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@694489d3: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@38f90fb0: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3cb753e8: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@49376e27: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@19063f79: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@597cfe0f: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2e655320: (connection evicted)
DEBUG - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
INFO  - HikariPool-1 - Shutdown completed.
