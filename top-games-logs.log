DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#1'
DEBUG - Creating shared instance of singleton bean 'jpa.AdminsRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'adminsRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.AdminsRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query Admins.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy107.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query Admins.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.AdminsRepository.
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#2'
DEBUG - Creating shared instance of singleton bean 'jpa.DeveloperRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'developerRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.DeveloperRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.DeveloperRepository.
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#4'
DEBUG - Creating shared instance of singleton bean 'jpa.OrderRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'orderRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.OrderRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.OrderRepository.
DEBUG - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskExecutorBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
DEBUG - Creating shared instance of singleton bean 'error'
DEBUG - Creating shared instance of singleton bean 'beanNameViewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'conventionErrorViewResolver'
DEBUG - Creating shared instance of singleton bean 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'basicErrorController'
DEBUG - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@61526469'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@61526469'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerRegistrationCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration'
DEBUG - Autowiring by type from bean name 'resourceHandlerRegistrationCustomizer' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
DEBUG - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG - Creating shared instance of singleton bean 'mvcValidator'
DEBUG - Failed to set up a Bean Validation provider
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:279)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:84)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG - Creating shared instance of singleton bean 'messageConverters'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'stringHttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
DEBUG - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
DEBUG - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
DEBUG - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Creating shared instance of singleton bean 'parameterNamesModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
DEBUG - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05'
DEBUG - @EnableAutoConfiguration was declared on a class in the package 'com.example.topgamesdata,com.example.topgameswebapi'. Automatic @Repository and @Entity scanning is enabled.
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05'
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
DEBUG - Creating shared instance of singleton bean 'jsonComponentModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonGeoModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
DEBUG - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'sortResolver'
DEBUG - Creating shared instance of singleton bean 'sortCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Creating shared instance of singleton bean 'pageableResolver'
DEBUG - Creating shared instance of singleton bean 'pageableCustomizer'
DEBUG - Creating shared instance of singleton bean 'applicationTaskExecutor'
DEBUG - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
DEBUG - Initializing ExecutorService 'applicationTaskExecutor'
DEBUG - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'localeResolver'
DEBUG - Creating shared instance of singleton bean 'themeResolver'
DEBUG - Creating shared instance of singleton bean 'flashMapManager'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 
	c.e.t.c.GameController:
	{GET [/api/game/getAll]}: getAllGames()
	{GET [/api/game/{id}]}: getGameById(Long)
	{POST [/api/game/dev/deleteAll]}: deleteAllGames()
	{DELETE [/api/game/delete/{id}]}: deleteGame(Long)
	{PUT [/api/game/update/{id}]}: updateGame(Game,Long)
	{POST [/api/game/add]}: createGame(Game)
	{POST [/api/game/dev/addSamples]}: addSamples()
DEBUG - 
	c.e.t.c.LogController:
	{GET [/logs/info]}: getInfoLogs()
	{GET [/logs/warning]}: getWarningLogs()
	{GET [/logs/error]}: getErrorLogs()
	{GET [/logs/debug]}: getDebugLogs()
	{GET [/logs/all]}: getLogs()
DEBUG - 
	c.e.t.c.UserController:
	{GET [/api/user/getAll]}: getAllUsers()
	{GET [/api/user/{id}]}: getUserById(Long)
	{DELETE [/api/user/delete/{id}]}: deleteUserById(Long)
	{PUT [/api/user/update/{id}]}: updateUserById(Long,User)
	{POST [/api/user/dev/deleteAll]}: deleteAllUsers()
	{POST [/api/user/dev/addSamples]}: addSamples()
	{POST [/api/user/add]}: createUser(User)
DEBUG - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
DEBUG - 21 mappings in 'requestMappingHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcPatternParser'
DEBUG - Creating shared instance of singleton bean 'mvcUrlPathHelper'
DEBUG - Creating shared instance of singleton bean 'mvcPathMatcher'
DEBUG - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'beanNameHandlerMapping'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'beanNameHandlerMapping' {}
DEBUG - Creating shared instance of singleton bean 'routerFunctionMapping'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerMapping'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
DEBUG - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'handlerFunctionAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'handlerExceptionResolver'
DEBUG - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'mvcViewResolver'
DEBUG - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'viewNameTranslator'
DEBUG - Creating shared instance of singleton bean 'defaultViewResolver'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@61526469'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Creating shared instance of singleton bean 'mbeanExporter'
DEBUG - Creating shared instance of singleton bean 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@61526469'
DEBUG - Creating shared instance of singleton bean 'mbeanServer'
DEBUG - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@77468bd9
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
DEBUG - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
DEBUG - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'applicationAvailability'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'lifecycleProcessor'
DEBUG - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
DEBUG - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskSchedulerBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionTemplate'
DEBUG - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'multipartResolver'
DEBUG - Registering beans for JMX exposure on startup
DEBUG - Autodetecting user-defined JMX MBeans
DEBUG - Bean with name 'dataSource' has been autodetected for JMX exposure
DEBUG - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
DEBUG - Starting beans in phase -2147483647
DEBUG - Successfully started bean 'springBootLoggingLifecycle'
DEBUG - Starting beans in phase 2147481599
INFO  - Starting ProtocolHandler ["http-nio-8081"]
INFO  - Tomcat started on port(s): 8081 (http) with context path ''
DEBUG - Successfully started bean 'webServerStartStop'
DEBUG - Starting beans in phase 2147482623
DEBUG - Successfully started bean 'webServerGracefulShutdown'
DEBUG - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) found beans of type 'org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean' &gameRepository, &adminsRepository, &developerRepository, &userRepository, &orderRepository and found beans of type 'org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension' org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0 (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
         - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



INFO  - Started TopgamesWebApiApplication in 8.1 seconds (process running for 9.564)
DEBUG - Application availability state LivenessState changed to CORRECT
DEBUG - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  - Initializing Servlet 'dispatcherServlet'
DEBUG - Detected StandardServletMultipartResolver
DEBUG - Detected AcceptHeaderLocaleResolver
DEBUG - Detected FixedThemeResolver
DEBUG - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@68838767
DEBUG - Detected org.springframework.web.servlet.support.SessionFlashMapManager@46146832
DEBUG - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
INFO  - Completed initialization in 2 ms
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Getting all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1514676720<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(754210032<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1764699071 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@16213586 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@62210990]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@489bf94]
DEBUG - Created new SQL alias : g1_0
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36528060539601))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36528060540999))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36528060540999)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36528060540999).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36528060540999).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36528060540999).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36528060540999).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36528060540999).username]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36528060539601)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36528060539601).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36528060539601).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36528060539601).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36528060539601).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36528060539601).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36528060539601).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36528060539601)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36528060540999)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(36528060540999) -> EntityResultInitializer(com.example.topgamesdata.model.User(36528060540999))@2132727250 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - Initializer list
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG -     com.example.topgamesdata.model.Game(36528060539601).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36528060539601).developer)@54020984 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG -     com.example.topgamesdata.model.Game(36528060539601).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36528060539601).genre)@1231061592 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(36528060539601).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36528060539601).platform)@1246896341 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36528060539601) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36528060539601))@33790043 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(754210032<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1764699071 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1514676720<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@16213586 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(1371809223<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Setting JDBC Connection [HikariProxyConnection@1594085775 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
INFO  - Getting all users
DEBUG - Found thread-bound EntityManager [SessionImpl(634597700<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Setting JDBC Connection [HikariProxyConnection@722787214 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b3c4eb7]
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Created new SQL alias : g1_0
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2f2b5a34]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36536473947712))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36536479527550))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36536479527550)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36536479527550).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36536479527550).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36536479527550).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36536479527550).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36536479527550).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36536479527550)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36536473947712)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36536473947712).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36536473947712).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36536473947712).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36536473947712).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36536473947712).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36536473947712).releaseDate]

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36536473947712)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(36536479527550) -> EntityResultInitializer(com.example.topgamesdata.model.User(36536479527550))@168177402 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(36536473947712).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36536473947712).developer)@2115052795 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG -     com.example.topgamesdata.model.Game(36536473947712).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36536473947712).genre)@830932455 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(36536473947712).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36536473947712).platform)@1311770448 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36536473947712) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36536473947712))@228521463 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(634597700<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@722787214 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1371809223<open>)]
DEBUG - committing
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1594085775 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/logs/all", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConf (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - GET "/logs/info", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getInfoLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[INFO  - Starting ProtocolHandler ["http-nio-8081"], INFO  - Tomcat started on port(s): 8081 (http)  (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/logs/warning", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getWarningLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/logs/error", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getErrorLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/logs/debug", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.LogController#getDebugLogs()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConf (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - POST "/api/game/dev/addSamples", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#addSamples()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(1302652700<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@499b6a70]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 1
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 1
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 2
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 2
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 3
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 3
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 4
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 4
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 5
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 5
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Executing identity-insert immediately
DEBUG - insert into developer (country, name) values (?, ?)
DEBUG - Natively generated identity: 6
DEBUG - Executing identity-insert immediately
DEBUG - insert into game (description, developer_id, name, release_date) values (?, ?, ?, ?)
DEBUG - Natively generated identity: 6
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1302652700<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#1], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#1], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#2], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#2], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#3], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#3], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#4], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#4], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#5], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#5], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.genre#6], was: [<unreferenced>] (initialized)
DEBUG - Collection found: [com.example.topgamesdata.model.Game.platform#6], was: [<unreferenced>] (initialized)
DEBUG - Flushed: 0 insertions, 0 updates, 0 deletions to 12 objects
DEBUG - Flushed: 12 (re)creations, 0 updates, 0 removals to 12 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.Developer{country=Japan, name=FromSoftware, id=6}
DEBUG - com.example.topgamesdata.model.Developer{country=Canada, name=Ubisoft Montreal, id=5}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Naughty Dog, id=2}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Santa Monica Studio, id=1}
DEBUG - com.example.topgamesdata.model.Developer{country=Poland, name=CD Projekt Red, id=4}
DEBUG - com.example.topgamesdata.model.Developer{country=America, name=Rockstar Games, id=3}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2011-09-22T00:00, genre=[ACTION, ADVENTURE], name=Dark Souls, description=Cool game, developer=com.example.topgamesdata.model.Developer#6, id=6, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2020-11-10T00:00, genre=[ACTION, ADVENTURE], name=Assassin's Creed Valhalla, description=A game about a viking, developer=com.example.topgamesdata.model.Developer#5, id=5, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2013-06-14T00:00, genre=[ACTION, ADVENTURE], name=The Last of Us, description=Cool game, developer=com.example.topgamesdata.model.Developer#2, id=2, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-04-20T00:00, genre=[ACTION, ADVENTURE], name=God of War, description=Cool game, developer=com.example.topgamesdata.model.Developer#1, id=1, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2015-05-18T00:00, genre=[ACTION, ADVENTURE, RPG, OPEN_WORLD], name=The Witcher 3: Wild Hunt, description=A game about a witcher, developer=com.example.topgamesdata.model.Developer#4, id=4, platform=[PLAYSTATION]}
DEBUG - com.example.topgamesdata.model.Game{releaseDate=2018-10-26T00:00, genre=[ACTION, ADVENTURE], name=Red Dead Redemption 2, description=A game about a cowboy, developer=com.example.topgamesdata.model.Developer#3, id=3, platform=[PLAYSTATION]}
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 4 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - insert into game_genre (game_id, genre) values (?, ?)
DEBUG - Done inserting collection: 2 rows inserted
DEBUG - Inserting collection: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - insert into game_platform (game_id, platform) values (?, ?)
DEBUG - Done inserting collection: 1 rows inserted
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["ok"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - HHH000420: Closing un-released batch
DEBUG - Completed 200 OK
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(12079055<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@652311120 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67adcf1]
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Created new SQL alias : g1_0
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36578059152319))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
INFO  - Getting all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1954887791<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36578059152319)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36578059152319).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36578059152319).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36578059152319).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36578059152319).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36578059152319).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36578059152319).releaseDate]

DEBUG - Setting JDBC Connection [HikariProxyConnection@737827191 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36578059152319)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG -     com.example.topgamesdata.model.Game(36578059152319).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36578059152319).developer)@2027821725 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG - begin
DEBUG -     com.example.topgamesdata.model.Game(36578059152319).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36578059152319).genre)@1297502416 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(36578059152319).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36578059152319).platform)@587424194 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36578059152319) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36578059152319))@1930472381 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3fe218e3]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36578061848211))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36578061848211)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36578061848211).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36578061848211).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36578061848211).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36578061848211).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36578061848211).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36578061848211)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(36578061848211) -> EntityResultInitializer(com.example.topgamesdata.model.User(36578061848211))@1371278918 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1954887791<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@737827191 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36578059152319)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).platform#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36578059152319)#1] : com.example.topgamesdata.model.Game@7f5fc1b6
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36578059152319).developer#1) : 1
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1225306052 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@25624183
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d450870
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36578059152319).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36578059152319)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cb389f9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36578059152319)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36578059152319)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36578059152319)#2] : com.example.topgamesdata.model.Game@7fa0bcd7
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36578059152319).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@789323419 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@56a2d005
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1995e48c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36578059152319).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36578059152319)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cb389f9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36578059152319)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36578059152319)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36578059152319)#3] : com.example.topgamesdata.model.Game@40b55835
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36578059152319).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1264162417 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@7712e035
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@707f0ab8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36578059152319).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36578059152319)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cb389f9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36578059152319)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36578059152319)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36578059152319)#4] : com.example.topgamesdata.model.Game@398dedc5
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36578059152319).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@849516730 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@1e94296e
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38d5154e
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36578059152319).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36578059152319)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cb389f9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36578059152319)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36578059152319)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36578059152319)#5] : com.example.topgamesdata.model.Game@dbbc66a
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36578059152319).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1537493986 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@33372073
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a3596ac
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36578059152319).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36578059152319)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cb389f9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36578059152319)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36578059152319)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36578059152319).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36578059152319)#6] : com.example.topgamesdata.model.Game@187f79ab
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36578059152319).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@462775588 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@696a5ac
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@361a4c1f
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36578059152319).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36578059152319)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cb389f9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36578059152319)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(12079055<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@652311120 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@7f5fc1b6, com.example.topgamesdata.model.Game@7fa0bcd7, com.exa (truncated)...]
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [CollectionTableGroup(com.example.topgamesdata.model.Game.genre)] with identifierForTableGroup [com.example.topgamesdata.model.Game.genre] for NavigablePath [com.example.topgamesdata.model.Game.genre] 
DEBUG - Generating Fetch for collection-part : `com.example.topgamesdata.model.Game.genre` -> `{element}`
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1234862709 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@51176948
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@51176948
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@33023c7f
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@51176948
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@51176948
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@51176948
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@33023c7f
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - Created new SQL alias : p1_0
DEBUG - Registration of TableGroup [CollectionTableGroup(com.example.topgamesdata.model.Game.platform)] with identifierForTableGroup [com.example.topgamesdata.model.Game.platform] for NavigablePath [com.example.topgamesdata.model.Game.platform] 
DEBUG - Generating Fetch for collection-part : `com.example.topgamesdata.model.Game.platform` -> `{element}`
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@2122583219 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@843931299
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@843931299
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1df61635
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1954993405 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1379476683
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1379476683
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@872902a
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1379476683
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1379476683
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1379476683
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@872902a
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1562684348 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@338790382
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@338790382
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6cb71838
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1711216603 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@911261644
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@911261644
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@9ea598
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@911261644
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@911261644
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@911261644
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@9ea598
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1201638879 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@1983013883
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@1983013883
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@25f2203f
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@2145329486 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3af2f0d6
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3af2f0d6
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3af2f0d6
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1365007044
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3af2f0d6
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1366854709 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@825170834
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@825170834
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2bb23dd9
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@11803755 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@573857162
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@573857162
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2e2de49c
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@573857162
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@573857162
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@573857162
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2e2de49c
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1632015502 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@500486139
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@500486139
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@19f856ac
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1269377993 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1948746365
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1948746365
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@201b30de
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1948746365
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1948746365
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1948746365
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@201b30de
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@936029893 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@2115571762
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@2115571762
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@64df5863
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - POST "/api/user/dev/addSamples", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#addSamples()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Adding samplee users
DEBUG - Found thread-bound EntityManager [SessionImpl(239652949<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5d932b4d]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next_val as id_val from user_seq for update
DEBUG - update user_seq set next_val= ? where next_val=?
DEBUG - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next_val as id_val from user_seq for update
DEBUG - update user_seq set next_val= ? where next_val=?
DEBUG - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(239652949<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=Kamil, lastName=Kamilowicz, password=haslo, id=4, email=essawessie@wp.pl, username=Strongman1337}
DEBUG - com.example.topgamesdata.model.User{firstName=Piot, lastName=Piotrowicz, password=haslo, id=3, email=javaenjoyer@google.com, username=JavaEnjoyer}
DEBUG - com.example.topgamesdata.model.User{firstName=Szymon, lastName=Ziutkowski, password=haslo, id=2, email=bigboy@wp.pl, username=BigBoy11}
DEBUG - com.example.topgamesdata.model.User{firstName=Stefan, lastName=Stefanowicz, password=haslo, id=1, email=plshelpme@java.com, username=StefanKox2137}
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["Samples added"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(1206996087<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1147133932 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42013b91]
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36579915431141))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36579915431141)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36579915431141).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36579915431141).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36579915431141).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36579915431141).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36579915431141).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36579915431141).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36579915431141)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(36579915431141).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36579915431141).developer)@1521825038 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG -     com.example.topgamesdata.model.Game(36579915431141).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36579915431141).genre)@608997372 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
INFO  - Getting all users
DEBUG -     com.example.topgamesdata.model.Game(36579915431141).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36579915431141).platform)@819761887 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36579915431141) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36579915431141))@1552608804 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - Found thread-bound EntityManager [SessionImpl(1468089914<open>)] for JPA transaction
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1289313263 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@41af8241]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36579915431141)): 1
DEBUG - Created new SQL alias : u1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36579920456032))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).platform#1
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36579920456032)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36579920456032).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36579920456032).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36579920456032).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36579920456032).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36579920456032).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36579920456032)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36579915431141)#1] : com.example.topgamesdata.model.Game@3a78abf1
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36579915431141).developer#1) : 1
DEBUG - Initializer list
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG -     com.example.topgamesdata.model.User(36579920456032) -> EntityResultInitializer(com.example.topgamesdata.model.User(36579920456032))@1753033621 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1780216771 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36579920456032)): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@1fad7b58
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36579920456032)#1] : com.example.topgamesdata.model.User@2a690693
DEBUG - Extracted JDBC value [1] - [plshelpme@java.com]
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Stefan]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - Extracted JDBC value [3] - [Stefanowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [StefanKox2137]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a9d1685
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36579920456032)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2bc9a1c8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36579920456032)#1] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36579915431141).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36579920456032)): 2
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36579920456032)#2] : com.example.topgamesdata.model.User@1dea2d9d
DEBUG - Extracted JDBC value [1] - [bigboy@wp.pl]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36579915431141)#1
DEBUG - Extracted JDBC value [2] - [Szymon]
DEBUG - Extracted JDBC value [3] - [Ziutkowski]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344226fa
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [BigBoy11]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36579915431141)#1] - using loading instance
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36579920456032)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2bc9a1c8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36579920456032)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36579920456032)): 3
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36579920456032)#3] : com.example.topgamesdata.model.User@1ac9ffe8
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36579915431141)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Extracted JDBC value [1] - [javaenjoyer@google.com]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Extracted JDBC value [2] - [Piot]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).platform#2
DEBUG - Extracted JDBC value [3] - [Piotrowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36579915431141)#2] : com.example.topgamesdata.model.Game@792b82ad
DEBUG - Extracted JDBC value [5] - [JavaEnjoyer]
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36579920456032)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2bc9a1c8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36579920456032)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36579920456032)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36579920456032)#4] : com.example.topgamesdata.model.User@78f63fbc
DEBUG - Extracted JDBC value [1] - [essawessie@wp.pl]
DEBUG - Extracted JDBC value [2] - [Kamil]
DEBUG - Extracted JDBC value [3] - [Kamilowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [Strongman1337]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36579920456032)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2bc9a1c8
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36579920456032)#4] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1468089914<open>)]
DEBUG - committing
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36579915431141).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1551572612 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1289313263 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@2a690693, com.example.topgamesdata.model.User@1dea2d9d, com.exa (truncated)...]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@636ccac4
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67e77713
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36579915431141).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36579915431141)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344226fa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36579915431141)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36579915431141)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36579915431141)#3] : com.example.topgamesdata.model.Game@594fbdba
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36579915431141).developer#3) : 3
DEBUG - Completed 200 OK
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1618174695 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@3fb0c366
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@442fea2d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36579915431141).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36579915431141)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344226fa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36579915431141)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36579915431141)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36579915431141)#4] : com.example.topgamesdata.model.Game@11a3a30f
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36579915431141).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@317994270 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@35ad83e8
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c21c86
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36579915431141).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36579915431141)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344226fa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36579915431141)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36579915431141)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36579915431141)#5] : com.example.topgamesdata.model.Game@1d1fa68f
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36579915431141).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@638189545 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@44f0d32f
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d6f8aef
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36579915431141).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36579915431141)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344226fa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36579915431141)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36579915431141)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36579915431141).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36579915431141)#6] : com.example.topgamesdata.model.Game@57622c9e
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36579915431141).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1640933640 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@3b695515
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f7b3d99
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36579915431141).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36579915431141)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344226fa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36579915431141)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1206996087<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1147133932 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@3a78abf1, com.example.topgamesdata.model.Game@792b82ad, com.exa (truncated)...]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@27888819 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@990501334
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@990501334
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3ba96bb8
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@990501334
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@990501334
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@990501334
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3ba96bb8
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1185397755 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@813296477
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@813296477
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@786b6605
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@49965437 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1078062225
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1078062225
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@32b9aa9d
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1078062225
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1078062225
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1078062225
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@32b9aa9d
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1530048107 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@36369186
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@36369186
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@50bc8347
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1475872844 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@7593423
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@7593423
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@47e53ca6
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@7593423
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@7593423
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@7593423
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@47e53ca6
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@151410584 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@88870383
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@88870383
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@de7cbf1
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1877343287 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1ad16700
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1ad16700
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1ad16700
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@326369287
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1ad16700
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1258857100 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@719739644
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@719739644
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5438f24b
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1368657431 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1388631603
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1388631603
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@17ee00d0
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1388631603
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1388631603
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1388631603
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@17ee00d0
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@2029052811 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@187673920
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@187673920
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@66dd0000
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@699875980 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1151347778
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1151347778
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@600b1cdb
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1151347778
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1151347778
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1151347778
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@600b1cdb
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1620910320 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@109831762
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@109831762
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@745f6f89
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Getting all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1603461270<open>)] for JPA transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(1027362533<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@2080457950 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - Setting JDBC Connection [HikariProxyConnection@1538092988 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - begin
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1eafeaad]
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@12a3f152]
DEBUG - Created new SQL alias : u1_0
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36631127766704))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36631127786656))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36631127766704)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36631127766704).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36631127766704).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36631127766704).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36631127766704).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36631127766704).username]

DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36631127786656)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36631127786656).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36631127786656).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36631127786656).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36631127786656).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36631127786656).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36631127786656).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36631127786656)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36631127766704)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(36631127766704) -> EntityResultInitializer(com.example.topgamesdata.model.User(36631127766704))@1656375157 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG -     com.example.topgamesdata.model.Game(36631127786656).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36631127786656).developer)@916137884 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG -     com.example.topgamesdata.model.Game(36631127786656).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36631127786656).genre)@1085360521 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(36631127786656).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36631127786656).platform)@69187007 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36631127786656) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36631127786656))@2060357595 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36631127766704)): 1
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36631127786656)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).platform#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36631127766704)#1] : com.example.topgamesdata.model.User@5ead93ed
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36631127786656)#1] : com.example.topgamesdata.model.Game@ae6245f
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36631127786656).developer#1) : 1
DEBUG - Extracted JDBC value [1] - [plshelpme@java.com]
DEBUG - Extracted JDBC value [2] - [Stefan]
DEBUG - Extracted JDBC value [3] - [Stefanowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [StefanKox2137]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1568142692 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36631127766704)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e1ce6a2
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36631127766704)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36631127766704)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36631127766704)#2] : com.example.topgamesdata.model.User@472a6076
DEBUG - Extracted JDBC value [1] - [bigboy@wp.pl]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - Extracted JDBC value [2] - [Szymon]
DEBUG - Extracted JDBC value [3] - [Ziutkowski]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [BigBoy11]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@1fd5a8e1
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36631127766704)#2
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e1ce6a2
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36631127766704)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36631127766704)): 3
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36631127766704)#3] : com.example.topgamesdata.model.User@59ccb32e
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d6ba2aa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - Extracted JDBC value [1] - [javaenjoyer@google.com]
DEBUG - Extracted JDBC value [2] - [Piot]
DEBUG - Extracted JDBC value [3] - [Piotrowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [JavaEnjoyer]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36631127766704)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e1ce6a2
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36631127766704)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36631127786656).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36631127766704)): 4
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36631127766704)#4] : com.example.topgamesdata.model.User@6b4c7101
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [1] - [essawessie@wp.pl]
DEBUG - Extracted JDBC value [2] - [Kamil]
DEBUG - Extracted JDBC value [3] - [Kamilowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [Strongman1337]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36631127766704)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e1ce6a2
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36631127766704)#4] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1027362533<open>)]
DEBUG - committing
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36631127786656)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c4764cf
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36631127786656)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36631127786656)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36631127786656)#2] : com.example.topgamesdata.model.Game@3874b6ba
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36631127786656).developer#2) : 2
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2080457950 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@2136132711 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@3628a7ff
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ff064a9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36631127786656).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36631127786656)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c4764cf
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36631127786656)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36631127786656)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36631127786656)#3] : com.example.topgamesdata.model.Game@382d535b
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36631127786656).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@250308786 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@d69f157
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5812b6b0
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36631127786656).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36631127786656)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c4764cf
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36631127786656)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36631127786656)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36631127786656)#4] : com.example.topgamesdata.model.Game@2def1ab6
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36631127786656).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@635283078 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@3f2e161b
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@778f7eee
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36631127786656).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36631127786656)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c4764cf
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36631127786656)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36631127786656)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36631127786656)#5] : com.example.topgamesdata.model.Game@79ec6800
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36631127786656).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@191684 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@5f1c6422
DEBUG - Writing [[com.example.topgamesdata.model.User@5ead93ed, com.example.topgamesdata.model.User@472a6076, com.exa (truncated)...]
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48efd7c9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36631127786656).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36631127786656)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c4764cf
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36631127786656)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36631127786656)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36631127786656).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36631127786656)#6] : com.example.topgamesdata.model.Game@f09c5e9
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36631127786656).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@156163894 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@7e51a339
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19974aa
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36631127786656).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36631127786656)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c4764cf
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36631127786656)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1603461270<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1538092988 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@ae6245f, com.example.topgamesdata.model.Game@3874b6ba, com.exam (truncated)...]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@670194539 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Completed 200 OK
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@645589749
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@645589749
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4653d2fb
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@645589749
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@645589749
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@645589749
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4653d2fb
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1019006372 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@683936182
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@683936182
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@36136994
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@2013964666 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1315395846
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1315395846
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@51737270
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1315395846
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@1315395846
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@1315395846
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@51737270
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1422508939 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@1849281682
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@1849281682
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@9052531
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1917261800 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@398519314
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@398519314
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@697d5ac0
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@398519314
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@398519314
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@398519314
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@697d5ac0
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1930242512 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@1688512074
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@1688512074
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@38fbb77e
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1414212238 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3342d98d
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3342d98d
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3342d98d
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@581187946
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3342d98d
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1978291907 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@1619363616
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@1619363616
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6c7722e2
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@74865426 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@977885151
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@977885151
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@482daadd
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@977885151
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@977885151
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@977885151
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@482daadd
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1090119652 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@1964507203
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@1964507203
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7455b70d
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@146671552 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@91178345
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@91178345
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@68a8c435
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@91178345
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@91178345
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@91178345
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@68a8c435
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1646142532 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@963513490
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@963513490
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@54b78364
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(1701075063<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Setting JDBC Connection [HikariProxyConnection@280422643 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Getting all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1312681880<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Setting JDBC Connection [HikariProxyConnection@1510277577 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@308205e1]
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Created new SQL alias : g1_0
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5d9e3e00]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36640522847615))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36640522847615)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36640522847615).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36640522847615).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36640522847615).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36640522847615).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36640522847615).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36640522847615).releaseDate]

DEBUG - Created new SQL alias : u1_0
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36640522847615)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36640524143639))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(36640522847615).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36640522847615).developer)@925008161 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG -     com.example.topgamesdata.model.Game(36640522847615).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36640522847615).genre)@1316450643 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(36640522847615).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36640522847615).platform)@619161703 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36640522847615) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36640522847615))@52113525 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36640524143639)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36640524143639).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36640524143639).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36640524143639).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36640524143639).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36640524143639).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36640524143639)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(36640524143639) -> EntityResultInitializer(com.example.topgamesdata.model.User(36640524143639))@1657781714 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36640522847615)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36640524143639)): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36640522847615)#1] : com.example.topgamesdata.model.Game@2adec32b
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36640524143639)#1] : com.example.topgamesdata.model.User@5171b1bd
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36640522847615).developer#1) : 1
DEBUG - Extracted JDBC value [1] - [plshelpme@java.com]
DEBUG - Extracted JDBC value [2] - [Stefan]
DEBUG - Extracted JDBC value [3] - [Stefanowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [StefanKox2137]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36640524143639)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ecfb76c
DEBUG - Initializer list
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36640524143639)#1] - using loading instance
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@593260484 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36640524143639)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36640524143639)#2] : com.example.topgamesdata.model.User@4d29aa5a
DEBUG - Extracted JDBC value [1] - [bigboy@wp.pl]
DEBUG - Extracted JDBC value [2] - [Szymon]
DEBUG - Extracted JDBC value [3] - [Ziutkowski]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [BigBoy11]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36640524143639)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ecfb76c
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36640524143639)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36640524143639)): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36640524143639)#3] : com.example.topgamesdata.model.User@5da40cc1
DEBUG - Extracted JDBC value [1] - [javaenjoyer@google.com]
DEBUG - Extracted JDBC value [2] - [Piot]
DEBUG - Extracted JDBC value [3] - [Piotrowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [JavaEnjoyer]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36640524143639)#3
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ecfb76c
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@35847948
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36640524143639)#3] - using loading instance
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36640524143639)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36640524143639)#4] : com.example.topgamesdata.model.User@184a291
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - Extracted JDBC value [1] - [essawessie@wp.pl]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75661273
DEBUG - Extracted JDBC value [2] - [Kamil]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - Extracted JDBC value [3] - [Kamilowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [Strongman1337]
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36640522847615).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36640524143639)#4
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ecfb76c
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36640524143639)#4] - using loading instance
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - Initiating transaction commit
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36640522847615)#1
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1312681880<open>)]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3306d557
DEBUG - committing
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36640522847615)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36640522847615)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36640522847615)#2] : com.example.topgamesdata.model.Game@38398c4c
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1510277577 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36640522847615).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1024477809 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@5171b1bd, com.example.topgamesdata.model.User@4d29aa5a, com.exa (truncated)...]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@f93790a
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - Completed 200 OK
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@30eff94b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36640522847615).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36640522847615)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3306d557
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36640522847615)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36640522847615)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36640522847615)#3] : com.example.topgamesdata.model.Game@7a7d2e40
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36640522847615).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@2025842547 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@43301bb
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@330ea31
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36640522847615).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36640522847615)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3306d557
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36640522847615)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36640522847615)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36640522847615)#4] : com.example.topgamesdata.model.Game@6b385931
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36640522847615).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@192569292 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@29c385f3
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@709e2b38
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36640522847615).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36640522847615)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3306d557
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36640522847615)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36640522847615)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36640522847615)#5] : com.example.topgamesdata.model.Game@6236c8ca
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36640522847615).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1374038929 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@7fb8f6ed
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fe2e028
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36640522847615).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36640522847615)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3306d557
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36640522847615)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36640522847615)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36640522847615).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36640522847615)#6] : com.example.topgamesdata.model.Game@74642c9b
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36640522847615).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1901946713 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@20745ca1
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a098059
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36640522847615).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36640522847615)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3306d557
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36640522847615)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1701075063<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@280422643 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@2adec32b, com.example.topgamesdata.model.Game@38398c4c, com.exa (truncated)...]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1549513994 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@1277606994
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@1277606994
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@16523b1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1277606994
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@1277606994
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@1277606994
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@16523b1
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@499126941 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@384083259
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@384083259
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5bf99741
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1852881505 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@626963526
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@626963526
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@38ad81bb
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@626963526
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@626963526
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@626963526
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@38ad81bb
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1607262026 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@1617878804
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@1617878804
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@49dba7e2
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1701031567 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@567855632
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@567855632
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@47326bd4
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@567855632
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@567855632
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@567855632
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@47326bd4
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1298027877 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@890747912
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@890747912
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2f06cf8b
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@795185342 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6aba7dce
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6aba7dce
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6aba7dce
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1946140292
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6aba7dce
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1212061077 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@1876772761
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@1876772761
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@70455e55
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@258214399 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1445528412
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1445528412
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@561eaeed
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1445528412
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@1445528412
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@1445528412
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@561eaeed
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1139349405 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@1668348023
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@1668348023
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@40de8215
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@735410401 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1152969078
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1152969078
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@433f59c5
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1152969078
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1152969078
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1152969078
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@433f59c5
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@498947503 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@2081386642
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@2081386642
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@337ed5f9
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(1136400714<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Setting JDBC Connection [HikariProxyConnection@1570510054 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d] read-only
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Getting all users
DEBUG - Found thread-bound EntityManager [SessionImpl(328026568<open>)] for JPA transaction
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@2080937515 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2] read-only
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@439e5376]
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - Created new SQL alias : g1_0
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78198a0c]
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(36644320748044))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(36644320748044)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36644320748044).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(36644320748044).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36644320748044).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(36644320748044).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(36644320748044).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(36644320748044).releaseDate]

DEBUG - Created new SQL alias : u1_0
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(36644320748044)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(36644321572949))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(36644321572949)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36644321572949).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36644321572949).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36644321572949).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(36644321572949).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(36644321572949).username]

DEBUG - Initializer list
DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(36644321572949)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG -     com.example.topgamesdata.model.Game(36644320748044).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(36644320748044).developer)@333265745 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@2080155460)
DEBUG -     com.example.topgamesdata.model.Game(36644320748044).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36644320748044).genre)@1810457194 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(36644320748044).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(36644320748044).platform)@507872001 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(36644320748044) -> EntityResultInitializer(com.example.topgamesdata.model.Game(36644320748044))@2100254776 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(36644321572949) -> EntityResultInitializer(com.example.topgamesdata.model.User(36644321572949))@797895933 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36644321572949)): 1
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36644320748044)): 1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36644321572949)#1] : com.example.topgamesdata.model.User@69a4e6e5
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).platform#1
DEBUG - Extracted JDBC value [1] - [plshelpme@java.com]
DEBUG - Extracted JDBC value [2] - [Stefan]
DEBUG - Extracted JDBC value [3] - [Stefanowicz]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36644320748044)#1] : com.example.topgamesdata.model.Game@2d74d8f
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [2] - [1]
DEBUG - Extracted JDBC value [5] - [StefanKox2137]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36644320748044).developer#1) : 1
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36644321572949)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31951628
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36644321572949)#1] - using loading instance
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36644321572949)): 2
DEBUG - Initializer list
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36644321572949)#2] : com.example.topgamesdata.model.User@275770a3
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1692911707 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Extracted JDBC value [1] - [bigboy@wp.pl]
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Extracted JDBC value [2] - [Szymon]
DEBUG - Extracted JDBC value [3] - [Ziutkowski]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [BigBoy11]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36644321572949)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31951628
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36644321572949)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36644321572949)): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36644321572949)#3] : com.example.topgamesdata.model.User@38211268
DEBUG - Extracted JDBC value [1] - [javaenjoyer@google.com]
DEBUG - Extracted JDBC value [2] - [Piot]
DEBUG - Extracted JDBC value [3] - [Piotrowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [5] - [JavaEnjoyer]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36644321572949)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31951628
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36644321572949)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(36644321572949)): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(36644321572949)#4] : com.example.topgamesdata.model.User@767c4847
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 1
DEBUG - Extracted JDBC value [1] - [essawessie@wp.pl]
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#1] : com.example.topgamesdata.model.Developer@10618ba5
DEBUG - Extracted JDBC value [2] - [Kamil]
DEBUG - Extracted JDBC value [3] - [Kamilowicz]
DEBUG - Extracted JDBC value [4] - [haslo]
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [5] - [Strongman1337]
DEBUG - Extracted JDBC value [2] - [Santa Monica Studio]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#1
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(36644321572949)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a9e2ce2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31951628
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#1] - using loading instance
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(36644321572949)#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36644320748044).developer#1] : 1 has being loaded by session.internalLoad.
DEBUG - Initiating transaction commit
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [God of War]
DEBUG - Extracted JDBC value [4] - [2018-04-20T00:00]
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(328026568<open>)]
DEBUG - committing
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36644320748044)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@169e153
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36644320748044)#1] - using loading instance
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36644320748044)): 2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2080937515 wrapping com.mysql.cj.jdbc.ConnectionImpl@5b4954b2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).platform#2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36644320748044)#2] : com.example.topgamesdata.model.Game@37e005c
DEBUG - Extracted JDBC value [2] - [2]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36644320748044).developer#2) : 2
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1297287705 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - Writing [[com.example.topgamesdata.model.User@69a4e6e5, com.example.topgamesdata.model.User@275770a3, com.exa (truncated)...]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#2] : com.example.topgamesdata.model.Developer@13000ff0
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Naughty Dog]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4656dc4b
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#2] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36644320748044).developer#2] : 2 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [The Last of Us]
DEBUG - Extracted JDBC value [4] - [2013-06-14T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36644320748044)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@169e153
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36644320748044)#2] - using loading instance
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36644320748044)): 3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).platform#3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36644320748044)#3] : com.example.topgamesdata.model.Game@5e74bb9a
DEBUG - Extracted JDBC value [2] - [3]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36644320748044).developer#3) : 3
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1353800760 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 3
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#3] : com.example.topgamesdata.model.Developer@5fc40501
DEBUG - Extracted JDBC value [1] - [America]
DEBUG - Extracted JDBC value [2] - [Rockstar Games]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ced25d
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#3] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36644320748044).developer#3] : 3 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a cowboy]
DEBUG - Extracted JDBC value [3] - [Red Dead Redemption 2]
DEBUG - Extracted JDBC value [4] - [2018-10-26T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36644320748044)#3
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@169e153
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36644320748044)#3] - using loading instance
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36644320748044)): 4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).platform#4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36644320748044)#4] : com.example.topgamesdata.model.Game@51da215b
DEBUG - Extracted JDBC value [2] - [4]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36644320748044).developer#4) : 4
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@1360949362 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 4
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#4] : com.example.topgamesdata.model.Developer@3168fea5
DEBUG - Extracted JDBC value [1] - [Poland]
DEBUG - Extracted JDBC value [2] - [CD Projekt Red]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1357951a
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#4] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36644320748044).developer#4] : 4 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a witcher]
DEBUG - Extracted JDBC value [3] - [The Witcher 3: Wild Hunt]
DEBUG - Extracted JDBC value [4] - [2015-05-18T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36644320748044)#4
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@169e153
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36644320748044)#4] - using loading instance
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36644320748044)): 5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).platform#5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36644320748044)#5] : com.example.topgamesdata.model.Game@73e7abd2
DEBUG - Extracted JDBC value [2] - [5]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36644320748044).developer#5) : 5
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@2139779944 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 5
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#5] : com.example.topgamesdata.model.Developer@1dcbe6c6
DEBUG - Extracted JDBC value [1] - [Canada]
DEBUG - Extracted JDBC value [2] - [Ubisoft Montreal]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31f6d724
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#5] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36644320748044).developer#5] : 5 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [A game about a viking]
DEBUG - Extracted JDBC value [3] - [Assassin's Creed Valhalla]
DEBUG - Extracted JDBC value [4] - [2020-11-10T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36644320748044)#5
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@169e153
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36644320748044)#5] - using loading instance
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Game(36644320748044)): 6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game(36644320748044).platform#6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Game(36644320748044)#6] : com.example.topgamesdata.model.Game@9661cee
DEBUG - Extracted JDBC value [2] - [6]
DEBUG - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.example.topgamesdata.model.Game(36644320748044).developer#6) : 6
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer -> EntityResultInitializer(com.example.topgamesdata.model.Developer)@248137267 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0 where d1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.Developer): 6
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.Developer#6] : com.example.topgamesdata.model.Developer@ce2bc37
DEBUG - Extracted JDBC value [1] - [Japan]
DEBUG - Extracted JDBC value [2] - [FromSoftware]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Developer#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50c58846
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Developer#6] - using loading instance
DEBUG - (EntitySelectFetchInitializer) Entity [com.example.topgamesdata.model.Game(36644320748044).developer#6] : 6 has being loaded by session.internalLoad.
DEBUG - Extracted JDBC value [1] - [Cool game]
DEBUG - Extracted JDBC value [3] - [Dark Souls]
DEBUG - Extracted JDBC value [4] - [2011-09-22T00:00]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.Game(36644320748044)#6
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@169e153
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.Game(36644320748044)#6] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1136400714<open>)]
DEBUG - committing
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1570510054 wrapping com.mysql.cj.jdbc.ConnectionImpl@26db557d]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.Game@2d74d8f, com.example.topgamesdata.model.Game@37e005c, com.examp (truncated)...]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1634184289 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@359131574
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@359131574
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@54e2d515
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@359131574
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#1] : org.hibernate.collection.spi.PersistentBag@359131574
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#1] -> org.hibernate.collection.spi.PersistentBag@359131574
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@54e2d515
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1898060015 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#1
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#1] : org.hibernate.collection.spi.PersistentBag@302947770
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#1] -> org.hibernate.collection.spi.PersistentBag@302947770
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6befedd6
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#1]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@485263416 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@499744376
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@499744376
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4c2f6eaa
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#2]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@499744376
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#2] : org.hibernate.collection.spi.PersistentBag@499744376
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#2] -> org.hibernate.collection.spi.PersistentBag@499744376
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4c2f6eaa
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1957504165 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#2
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#2] : org.hibernate.collection.spi.PersistentBag@638298143
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#2] -> org.hibernate.collection.spi.PersistentBag@638298143
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@595d2f9a
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#2]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@146932008 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1029466455
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1029466455
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@298b6338
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1029466455
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#3] : org.hibernate.collection.spi.PersistentBag@1029466455
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#3] -> org.hibernate.collection.spi.PersistentBag@1029466455
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@298b6338
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@831687639 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#3
DEBUG - Extracted JDBC value [0] - [3]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#3] : org.hibernate.collection.spi.PersistentBag@783322755
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#3] -> org.hibernate.collection.spi.PersistentBag@783322755
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@b315b78
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#3]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1144491577 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@37bfc8fe
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@37bfc8fe
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - Extracted JDBC value [1] - [6]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@37bfc8fe
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#4]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#4] : org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#4] -> org.hibernate.collection.spi.PersistentBag@1567013330
DEBUG - Extracted JDBC value [1] - [11]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@37bfc8fe
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1401455082 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#4
DEBUG - Extracted JDBC value [0] - [4]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#4] : org.hibernate.collection.spi.PersistentBag@578114418
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#4] -> org.hibernate.collection.spi.PersistentBag@578114418
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1d609bff
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#4]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@233122775 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@719078451
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@719078451
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@58bcbc3c
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#5]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@719078451
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#5] : org.hibernate.collection.spi.PersistentBag@719078451
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#5] -> org.hibernate.collection.spi.PersistentBag@719078451
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@58bcbc3c
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@514267383 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#5
DEBUG - Extracted JDBC value [0] - [5]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#5] : org.hibernate.collection.spi.PersistentBag@1555499547
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#5] -> org.hibernate.collection.spi.PersistentBag@1555499547
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@e5b90f0
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#5]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.genre]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (g1 : com.example.topgamesdata.model.Game.genre) {
          primaryTableReference : game_genre as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.genre -> BagInitializer(com.example.topgamesdata.model.Game.genre)@1713214274 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG - select g1_0.game_id,g1_0.genre from game_genre g1_0 where g1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1276221290
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1276221290
DEBUG - Extracted JDBC value [1] - [0]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5c20acb
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.genre#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Found existing loading collection entry [com.example.topgamesdata.model.Game.genre#6]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1276221290
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.genre#6] : org.hibernate.collection.spi.PersistentBag@1276221290
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.genre#6] -> org.hibernate.collection.spi.PersistentBag@1276221290
DEBUG - Extracted JDBC value [1] - [1]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5c20acb
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.genre#6]
DEBUG - DomainResult Graph:
 \-CollectionDomainResult [com.example.topgamesdata.model.Game.platform]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.example.topgamesdata.model.Game.platform) {
          primaryTableReference : game_platform as p1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game.platform -> BagInitializer(com.example.topgamesdata.model.Game.platform)@1498942895 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG - select p1_0.game_id,p1_0.platform from game_platform p1_0 where p1_0.game_id=?
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (DelayedCollectionInitializer) Current row collection key : com.example.topgamesdata.model.Game.platform#6
DEBUG - Extracted JDBC value [0] - [6]
DEBUG - (BagInitializer) Responsible for loading collection [com.example.topgamesdata.model.Game.platform#6] : org.hibernate.collection.spi.PersistentBag@237938168
DEBUG - (BagInitializer) Reading element from row for collection [com.example.topgamesdata.model.Game.platform#6] -> org.hibernate.collection.spi.PersistentBag@237938168
DEBUG - Extracted JDBC value [1] - [2]
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@49dbcee0
DEBUG - Collection fully initialized: [com.example.topgamesdata.model.Game.platform#6]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
DEBUG - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4af0df05, started on Sun Jan 22 09:12:48 CET 2023
DEBUG - Stopping beans in phase 2147482623
DEBUG - Bean 'webServerGracefulShutdown' completed its stop procedure
DEBUG - Stopping beans in phase 2147481599
DEBUG - Bean 'webServerStartStop' completed its stop procedure
DEBUG - Stopping beans in phase -2147483647
DEBUG - Bean 'springBootLoggingLifecycle' completed its stop procedure
DEBUG - Unregistering JMX-exposed beans on shutdown
DEBUG - Unregistering JMX-exposed beans
DEBUG - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
DEBUG - HHH000031: Closing
DEBUG - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2f019de8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1d2d4d7a]
DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
INFO  - HikariPool-1 - Shutdown initiated...
DEBUG - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5b4954b2: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@26db557d: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@67e65f46: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@56cbb9f2: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7c9a009: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3875b69: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7102dd9e: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2214b5b1: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2728b668: (connection evicted)
DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@343e4d15: (connection evicted)
DEBUG - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
INFO  - HikariPool-1 - Shutdown completed.
