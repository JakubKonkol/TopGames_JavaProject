DEBUG - Creating shared instance of singleton bean 'securityConfiguration'
DEBUG - Creating shared instance of singleton bean 'developerController'
DEBUG - Creating shared instance of singleton bean 'developerService'
DEBUG - Creating shared instance of singleton bean 'developerRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#4'
DEBUG - Creating shared instance of singleton bean 'jpa.DeveloperRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'jpaSharedEM_entityManagerFactory'
DEBUG - Creating shared instance of singleton bean 'jpaMappingContext'
DEBUG - Initializing JpaMetamodelMappingContext…
DEBUG - Finished initializing JpaMetamodelMappingContext
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Statistics initialized [enabled=false]
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.DeveloperRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.DeveloperRepository.
DEBUG - Autowiring by type from bean name 'developerService' via constructor to bean named 'developerRepository'
DEBUG - Autowiring by type from bean name 'developerController' via constructor to bean named 'developerService'
DEBUG - Creating shared instance of singleton bean 'gameController'
DEBUG - Creating shared instance of singleton bean 'gameService'
DEBUG - Creating shared instance of singleton bean 'gameRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#0'
DEBUG - Creating shared instance of singleton bean 'jpa.GameRepository.fragments#0'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.GameRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.GameRepository.
DEBUG - Autowiring by type from bean name 'gameService' via constructor to bean named 'gameRepository'
DEBUG - Autowiring by type from bean name 'gameController' via constructor to bean named 'gameService'
DEBUG - Creating shared instance of singleton bean 'logController'
DEBUG - Creating shared instance of singleton bean 'secretController'
DEBUG - Creating shared instance of singleton bean 'userController'
DEBUG - Creating shared instance of singleton bean 'userService'
DEBUG - Creating shared instance of singleton bean 'userRepository'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#2'
DEBUG - Creating shared instance of singleton bean 'jpa.UserRepository.fragments#0'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.UserRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query User.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy108.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query User.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.UserRepository.
DEBUG - Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
DEBUG - Autowiring by type from bean name 'userController' via constructor to bean named 'userService'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
DEBUG - Creating shared instance of singleton bean 'filterChain'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@50687efb'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@50687efb'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerRegistrationCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration'
DEBUG - Autowiring by type from bean name 'resourceHandlerRegistrationCustomizer' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
DEBUG - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'clientRegistrationRepository'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
DEBUG - Autowiring by type from bean name 'clientRegistrationRepository' via factory method to bean named 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
DEBUG - Creating shared instance of singleton bean 'authorizedClientRepository'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'authorizedClientService'
DEBUG - Autowiring by type from bean name 'authorizedClientService' via factory method to bean named 'clientRegistrationRepository'
DEBUG - Autowiring by type from bean name 'authorizedClientRepository' via factory method to bean named 'authorizedClientService'
DEBUG - Creating shared instance of singleton bean 'objectPostProcessor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
DEBUG - Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@50687efb'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
DEBUG - Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
DEBUG - Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
DEBUG - Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
DEBUG - Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Creating shared instance of singleton bean 'authenticationManagerBuilder'
DEBUG - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
DEBUG - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Creating shared instance of singleton bean 'authenticationEventPublisher'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
DEBUG - Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration'
DEBUG - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
DEBUG - Autowiring by type from bean name 'filterChain' via factory method to bean named 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity'
DEBUG - Creating shared instance of singleton bean 'mvcHandlerMappingIntrospector'
DEBUG - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 
	c.e.t.c.DeveloperController:
	{GET [/api/developer/getAll]}: getAllDevelopers()
DEBUG - 
	c.e.t.c.GameController:
	{POST [/api/game/dev/deleteAll]}: deleteAllGames()
	{GET [/api/game/getAll]}: getAllGames()
	{POST [/api/game/add]}: createGame(Game)
	{GET [/api/game/{id}]}: getGameById(Long)
	{DELETE [/api/game/delete/{id}]}: deleteGame(Long)
	{POST [/api/game/dev/addSamples]}: addSamples()
	{PUT [/api/game/update/{id}]}: updateGame(Game,Long)
DEBUG - 
	c.e.t.c.LogController:
	{GET [/logs/error]}: getErrorLogs()
	{GET [/logs/debug]}: getDebugLogs()
	{GET [/logs/all]}: getLogs()
	{GET [/logs/info]}: getInfoLogs()
	{GET [/logs/warning]}: getWarningLogs()
DEBUG - 
	c.e.t.c.SecretController:
	{GET [/secret]}: wowYouAreLoggedInSoCool()
DEBUG - 
	c.e.t.c.UserController:
	{POST [/api/user/dev/addSamples]}: addSamples()
	{GET [/api/user/{id}]}: getUserById(Long)
	{PUT [/api/user/update/{id}]}: updateUserById(Long,User)
	{POST [/api/user/add]}: createUser(User)
	{GET [/api/user/getAll]}: getAllUsers()
	{DELETE [/api/user/delete/{id}]}: deleteUserById(Long)
	{POST [/api/user/dev/deleteAll]}: deleteAllUsers()
DEBUG - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
DEBUG - 23 mappings in 'requestMappingHandlerMapping'
DEBUG - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'beanNameHandlerMapping'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'beanNameHandlerMapping' {}
DEBUG - Creating shared instance of singleton bean 'routerFunctionMapping'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - Creating shared instance of singleton bean 'messageConverters'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'stringHttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
DEBUG - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
DEBUG - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
DEBUG - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG - Creating shared instance of singleton bean 'parameterNamesModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
DEBUG - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
DEBUG - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - @EnableAutoConfiguration was declared on a class in the package 'com.example.topgamesdata,com.example.topgameswebapi'. Automatic @Repository and @Entity scanning is enabled.
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
DEBUG - Creating shared instance of singleton bean 'jsonComponentModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'jacksonGeoModule'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
DEBUG - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
DEBUG - Creating shared instance of singleton bean 'resourceHandlerMapping'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
DEBUG - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
INFO  - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e5e7753, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11678469, org.springframework.security.web.context.SecurityContextHolderFilter@a36ff0b, org.springframework.security.web.header.HeaderWriterFilter@5f233f9, org.springframework.security.web.authentication.logout.LogoutFilter@52bcfd10, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3c981f76, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4844e24b, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1e5190bd, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@395115ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@344769b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6329a5b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36c1b6ff, org.springframework.security.web.access.ExceptionTranslationFilter@6cb759d5, org.springframework.security.web.access.intercept.AuthorizationFilter@21202507]
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#1'
DEBUG - Creating shared instance of singleton bean 'jpa.OrderRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'orderRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.OrderRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.OrderRepository.
DEBUG - Creating shared instance of singleton bean 'jpa.named-queries#3'
DEBUG - Creating shared instance of singleton bean 'jpa.AdminsRepository.fragments#0'
DEBUG - Creating shared instance of singleton bean 'adminsRepository'
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Initializing repository instance for com.example.topgamesdata.repositories.AdminsRepository…
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Looking up named query Admins.findByUsername
DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy108.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:229)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Did not find named query Admins.findByUsername
DEBUG - Creating new EntityManager for shared EntityManager invocation
DEBUG - Finished creation of repository instance for com.example.topgamesdata.repositories.AdminsRepository.
DEBUG - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskExecutorBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
DEBUG - Creating shared instance of singleton bean 'error'
DEBUG - Creating shared instance of singleton bean 'beanNameViewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG - Creating shared instance of singleton bean 'conventionErrorViewResolver'
DEBUG - Creating shared instance of singleton bean 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'basicErrorController'
DEBUG - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
DEBUG - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcValidator'
WARN  - HV000184: ParameterMessageInterpolator has been chosen, EL interpolation will not be supported
DEBUG - Failed to set up a Bean Validation provider
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:279)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:84)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at com.example.topgameswebapi.TopgamesWebApiApplication.main(TopgamesWebApiApplication.java:28)
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG - Creating shared instance of singleton bean 'sortResolver'
DEBUG - Creating shared instance of singleton bean 'sortCustomizer'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG - Creating shared instance of singleton bean 'pageableResolver'
DEBUG - Creating shared instance of singleton bean 'pageableCustomizer'
DEBUG - Creating shared instance of singleton bean 'applicationTaskExecutor'
DEBUG - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
DEBUG - Initializing ExecutorService 'applicationTaskExecutor'
DEBUG - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'localeResolver'
DEBUG - Creating shared instance of singleton bean 'themeResolver'
DEBUG - Creating shared instance of singleton bean 'flashMapManager'
DEBUG - Creating shared instance of singleton bean 'mvcPatternParser'
DEBUG - Creating shared instance of singleton bean 'mvcUrlPathHelper'
DEBUG - Creating shared instance of singleton bean 'mvcPathMatcher'
DEBUG - Creating shared instance of singleton bean 'handlerFunctionAdapter'
DEBUG - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
DEBUG - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
DEBUG - Creating shared instance of singleton bean 'handlerExceptionResolver'
DEBUG - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
DEBUG - Creating shared instance of singleton bean 'mvcViewResolver'
DEBUG - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG - Creating shared instance of singleton bean 'viewNameTranslator'
DEBUG - Creating shared instance of singleton bean 'defaultViewResolver'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@50687efb'
DEBUG - Creating shared instance of singleton bean 'viewResolver'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
DEBUG - Creating shared instance of singleton bean 'mbeanExporter'
DEBUG - Creating shared instance of singleton bean 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
DEBUG - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@50687efb'
DEBUG - Creating shared instance of singleton bean 'mbeanServer'
DEBUG - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@7006c658
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
DEBUG - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
DEBUG - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'applicationAvailability'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'lifecycleProcessor'
DEBUG - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
DEBUG - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
DEBUG - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'delegatingApplicationListener'
DEBUG - Creating shared instance of singleton bean 'springSecurityFilterChain'
DEBUG - Creating shared instance of singleton bean 'webSecurityExpressionHandler'
DEBUG - Creating shared instance of singleton bean 'privilegeEvaluator'
DEBUG - Creating shared instance of singleton bean 'requestDataValueProcessor'
DEBUG - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'taskSchedulerBuilder'
DEBUG - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
DEBUG - Creating shared instance of singleton bean 'transactionTemplate'
DEBUG - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
DEBUG - Creating shared instance of singleton bean 'multipartResolver'
DEBUG - Registering beans for JMX exposure on startup
DEBUG - Autodetecting user-defined JMX MBeans
DEBUG - Bean with name 'dataSource' has been autodetected for JMX exposure
DEBUG - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
DEBUG - Starting beans in phase -2147483647
DEBUG - Successfully started bean 'springBootLoggingLifecycle'
DEBUG - Starting beans in phase 2147481599
INFO  - Starting ProtocolHandler ["http-nio-8081"]
INFO  - Tomcat started on port(s): 8081 (http) with context path ''
DEBUG - Successfully started bean 'webServerStartStop'
DEBUG - Starting beans in phase 2147482623
DEBUG - Successfully started bean 'webServerGracefulShutdown'
DEBUG - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   OAuth2ClientRegistrationRepositoryConfiguration matched:
      - OAuth2 Clients Configured Condition found registered clients 806856711257-r1i8bpofb8o2f0hhe3hoetef318k6vf1.apps.googleusercontent.com (ClientsConfiguredCondition)

   OAuth2ClientRegistrationRepositoryConfiguration#clientRegistrationRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) found bean 'clientRegistrationRepository' (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientService matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.OAuth2AuthorizedClientService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)
      - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) found beans of type 'org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean' &gameRepository, &orderRepository, &userRepository, &adminsRepository, &developerRepository and found beans of type 'org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension' org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0 (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
         - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   OAuth2WebSecurityConfiguration.OAuth2SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' filterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' filterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' clientRegistrationRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



INFO  - Started TopgamesWebApiApplication in 4.786 seconds (process running for 5.515)
DEBUG - Application availability state LivenessState changed to CORRECT
DEBUG - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  - Initializing Servlet 'dispatcherServlet'
DEBUG - Detected StandardServletMultipartResolver
DEBUG - Detected AcceptHeaderLocaleResolver
DEBUG - Detected FixedThemeResolver
DEBUG - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@45cddfd3
DEBUG - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5a6d4dee
DEBUG - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
INFO  - Completed initialization in 1 ms
DEBUG - Securing OPTIONS /api/user/add
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Secured OPTIONS /api/user/add
DEBUG - Securing POST /api/user/add
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Secured POST /api/user/add
DEBUG - POST "/api/user/add", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.User@3a857b5]
INFO  - User  was created
DEBUG - Found thread-bound EntityManager [SessionImpl(1327174047<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@19df26f4]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next value for user_seq
DEBUG - execute query: select next value for user_seq
DEBUG - Sequence value obtained: 1
DEBUG - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1327174047<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=1, email=, username=}
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - execute query: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [com.example.topgamesdata.model.User@3a857b5]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing GET /api/user/getAll
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Secured GET /api/user/getAll
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1665572387<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@55604035 wrapping org.mariadb.jdbc.Connection@3c17bd0b] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1da222eb]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(259380916112400))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(259380916112400)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259380916112400).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259380916112400).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259380916112400).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259380916112400).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(259380916112400).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(259380916112400)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(259380916112400) -> EntityResultInitializer(com.example.topgamesdata.model.User(259380916112400))@552171223 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [1]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(259380916112400)): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(259380916112400)#1] : com.example.topgamesdata.model.User@7f3cc14f
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(259380916112400)#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@701f8df9
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(259380916112400)#1] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1665572387<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@55604035 wrapping org.mariadb.jdbc.Connection@3c17bd0b]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@7f3cc14f]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing OPTIONS /api/user/delete/1
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Secured OPTIONS /api/user/delete/1
DEBUG - Securing DELETE /api/user/delete/1
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Secured DELETE /api/user/delete/1
DEBUG - DELETE "/api/user/delete/1", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(2135926958<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1c8c1f32]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User -> EntityResultInitializer(com.example.topgamesdata.model.User)@203998934 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User): 1
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User#1] : com.example.topgamesdata.model.User@72ef0e7a
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User#1
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@383b6887
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User#1] - using loading instance
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(2135926958<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=1, email=, username=}
DEBUG - delete from user where id=?
DEBUG - execute query: delete from user where id=?
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Not closing pre-bound JPA EntityManager after transaction
WARN  - User with id 1 was deleted
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["User deleted"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing GET /api/game/getAll
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Secured GET /api/game/getAll
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
DEBUG - Securing GET /api/user/getAll
DEBUG - Found thread-bound EntityManager [SessionImpl(149482958<open>)] for JPA transaction
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Secured GET /api/user/getAll
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1340535834<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Securing GET /api/developer/getAll
DEBUG - Setting JDBC Connection [HikariProxyConnection@103744163 wrapping org.mariadb.jdbc.Connection@3c17bd0b] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Secured GET /api/developer/getAll
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@21086be]
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(259386490300700))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all developers
DEBUG - Found thread-bound EntityManager [SessionImpl(1334801738<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(259386490300700)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(259386490300700).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(259386490300700).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(259386490300700).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(259386490300700).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(259386490300700).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(259386490300700).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(259386490300700)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Setting JDBC Connection [HikariProxyConnection@1092686742 wrapping org.mariadb.jdbc.Connection@4e11c6ff] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@451e9f6a]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(259386495195700))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(259386495195700)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259386495195700).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259386495195700).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259386495195700).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259386495195700).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(259386495195700).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(259386495195700)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Initializer list
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(259386495195700) -> EntityResultInitializer(com.example.topgamesdata.model.User(259386495195700))@1614014178 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG -     com.example.topgamesdata.model.Game(259386490300700).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(259386490300700).developer)@1679466633 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@610603627)
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG -     com.example.topgamesdata.model.Game(259386490300700).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(259386490300700).genre)@613494827 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(259386490300700).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(259386490300700).platform)@848732563 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(259386490300700) -> EntityResultInitializer(com.example.topgamesdata.model.Game(259386490300700))@62476704 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - execute query: select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Setting JDBC Connection [HikariProxyConnection@1095275211 wrapping org.mariadb.jdbc.Connection@1bc57eca] read-only
DEBUG - Initiating transaction commit
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1340535834<open>)]
DEBUG - committing
DEBUG - begin
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=0
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@45771e3a]
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1092686742 wrapping org.mariadb.jdbc.Connection@4e11c6ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(259386497327000))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(259386497327000)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(259386497327000).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(259386497327000).name]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(259386497327000)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - Completed 200 OK
DEBUG -     com.example.topgamesdata.model.Developer(259386497327000) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(259386497327000))@1616537535 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - execute query: select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(149482958<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@103744163 wrapping org.mariadb.jdbc.Connection@3c17bd0b]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1334801738<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1095275211 wrapping org.mariadb.jdbc.Connection@1bc57eca]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing OPTIONS /api/user/add
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Secured OPTIONS /api/user/add
DEBUG - Securing POST /api/user/add
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Secured POST /api/user/add
DEBUG - POST "/api/user/add", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#createUser(User)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.User@47597abd]
INFO  - User  was created
DEBUG - Found thread-bound EntityManager [SessionImpl(1235127334<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4da111cd]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - select next value for user_seq
DEBUG - execute query: select next value for user_seq
DEBUG - Sequence value obtained: 51
DEBUG - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1235127334<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=2, email=, username=}
DEBUG - insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - execute query: insert into user (email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?)
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [com.example.topgamesdata.model.User@47597abd]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing GET /api/user/getAll
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Secured GET /api/user/getAll
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1005915743<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@871249682 wrapping org.mariadb.jdbc.Connection@3c17bd0b] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1933492c]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(259389311653300))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(259389311653300)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259389311653300).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259389311653300).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259389311653300).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259389311653300).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(259389311653300).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(259389311653300)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(259389311653300) -> EntityResultInitializer(com.example.topgamesdata.model.User(259389311653300))@201866506 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(259389311653300)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(259389311653300)#2] : com.example.topgamesdata.model.User@7372e5d6
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(259389311653300)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3edf76df
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(259389311653300)#2] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1005915743<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@871249682 wrapping org.mariadb.jdbc.Connection@3c17bd0b]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@7372e5d6]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing OPTIONS /api/user/update/2
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#updateUserById(Long, User)
DEBUG - Secured OPTIONS /api/user/update/2
DEBUG - Securing PUT /api/user/update/2
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#updateUserById(Long, User)
DEBUG - Secured PUT /api/user/update/2
DEBUG - PUT "/api/user/update/2", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#updateUserById(Long, User)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Read "application/json;charset=UTF-8" to [com.example.topgamesdata.model.User@50f3e45e]
INFO  - User with id 2 was updated
DEBUG - Found thread-bound EntityManager [SessionImpl(466623971<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@2134156993 wrapping org.mariadb.jdbc.Connection@3c17bd0b] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@34985ff0]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User -> EntityResultInitializer(com.example.topgamesdata.model.User)@2072415273 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User#2] : com.example.topgamesdata.model.User@4c6bb6a4
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - []
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c38cc4
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User#2] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(466623971<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2134156993 wrapping org.mariadb.jdbc.Connection@3c17bd0b]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Found thread-bound EntityManager [SessionImpl(466623971<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@76d9b242]
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(466623971<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=2, email=, username=ESSSAA}
DEBUG - update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
DEBUG - execute query: update user set email=?, first_name=?, last_name=?, password=?, username=? where id=?
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [com.example.topgamesdata.model.User@4c6bb6a4]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing GET /api/user/getAll
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Secured GET /api/user/getAll
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(822706613<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1070496228 wrapping org.mariadb.jdbc.Connection@3c17bd0b] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3bf1eac5]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(259393073235400))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(259393073235400)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259393073235400).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259393073235400).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259393073235400).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259393073235400).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(259393073235400).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(259393073235400)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User(259393073235400) -> EntityResultInitializer(com.example.topgamesdata.model.User(259393073235400))@517770384 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - Extracted JDBC value [0] - [2]
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User(259393073235400)): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User(259393073235400)#2] : com.example.topgamesdata.model.User@60d04e6b
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - [ESSSAA]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User(259393073235400)#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1a92f6ed
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User(259393073235400)#2] - using loading instance
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(822706613<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1070496228 wrapping org.mariadb.jdbc.Connection@3c17bd0b]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[com.example.topgamesdata.model.User@60d04e6b]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing OPTIONS /api/user/delete/2
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Secured OPTIONS /api/user/delete/2
DEBUG - Securing DELETE /api/user/delete/2
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Secured DELETE /api/user/delete/2
DEBUG - DELETE "/api/user/delete/2", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#deleteUserById(Long)
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Found thread-bound EntityManager [SessionImpl(453413652<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@647d7a60]
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.User -> EntityResultInitializer(com.example.topgamesdata.model.User)@1545546599 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0 where u1_0.id=?
DEBUG - (EntityResultInitializer) Hydrated EntityKey (com.example.topgamesdata.model.User): 2
DEBUG - (EntityResultInitializer) Created new entity instance [com.example.topgamesdata.model.User#2] : com.example.topgamesdata.model.User@4d241158
DEBUG - Extracted JDBC value [1] - []
DEBUG - Extracted JDBC value [2] - []
DEBUG - Extracted JDBC value [3] - []
DEBUG - Extracted JDBC value [4] - []
DEBUG - Extracted JDBC value [5] - [ESSSAA]
DEBUG - (EntityResultInitializer) Done materializing entityInstance : com.example.topgamesdata.model.User#2
DEBUG - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68c55f88
DEBUG - (EntityResultInitializer) Found existing loading entry [com.example.topgamesdata.model.User#2] - using loading instance
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(453413652<open>)]
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.example.topgamesdata.model.User{firstName=, lastName=, password=, id=2, email=, username=ESSSAA}
DEBUG - delete from user where id=?
DEBUG - execute query: delete from user where id=?
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Not closing pre-bound JPA EntityManager after transaction
WARN  - User with id 2 was deleted
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
DEBUG - Writing ["User deleted"]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Securing GET /api/game/getAll
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Secured GET /api/game/getAll
DEBUG - GET "/api/game/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.GameController#getAllGames()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all games
DEBUG - Found thread-bound EntityManager [SessionImpl(627258296<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Securing GET /api/user/getAll
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Secured GET /api/user/getAll
DEBUG - GET "/api/user/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.UserController#getAllUsers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  - Got all users
DEBUG - Found thread-bound EntityManager [SessionImpl(1463814548<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - Setting JDBC Connection [HikariProxyConnection@1679096668 wrapping org.mariadb.jdbc.Connection@1bc57eca] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - Setting JDBC Connection [HikariProxyConnection@1822311141 wrapping org.mariadb.jdbc.Connection@3c17bd0b] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - begin
DEBUG - execute query: set autocommit=0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4685a708]
DEBUG - Created new SQL alias : u1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.User(259395678341500))] with identifierForTableGroup [com.example.topgamesdata.model.User] for NavigablePath [com.example.topgamesdata.model.User] 
DEBUG - Securing GET /api/developer/getAll
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.User(259395678341500)]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259395678341500).email]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259395678341500).firstName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259395678341500).lastName]
 |  +-BasicFetch [com.example.topgamesdata.model.User(259395678341500).password]
 |  \-BasicFetch [com.example.topgamesdata.model.User(259395678341500).username]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.topgamesdata.model.User(259395678341500)) {
          primaryTableReference : user as u1_0
        }
      }
    }

DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Secured GET /api/developer/getAll
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG - GET "/api/developer/getAll", parameters={}
DEBUG - Mapped to com.example.topgameswebapi.controller.DeveloperController#getAllDevelopers()
DEBUG - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG -     com.example.topgamesdata.model.User(259395678341500) -> EntityResultInitializer(com.example.topgamesdata.model.User(259395678341500))@1494361333 (SingleTableEntityPersister(com.example.topgamesdata.model.User))
DEBUG - select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
INFO  - Got all developers
DEBUG - Found thread-bound EntityManager [SessionImpl(656791099<open>)] for JPA transaction
DEBUG - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG - execute query: select u1_0.id,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.username from user u1_0
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7ca23edd]
DEBUG - Created new SQL alias : g1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Game(259395680946100))] with identifierForTableGroup [com.example.topgamesdata.model.Game] for NavigablePath [com.example.topgamesdata.model.Game] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Game(259395680946100)]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(259395680946100).description]
 |  +-EntityFetchSelectImpl [com.example.topgamesdata.model.Game(259395680946100).developer]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(259395680946100).genre]
 |  +-BasicFetch [com.example.topgamesdata.model.Game(259395680946100).name]
 |  +-DelayedCollectionFetch [com.example.topgamesdata.model.Game(259395680946100).platform]
 |  \-BasicFetch [com.example.topgamesdata.model.Game(259395680946100).releaseDate]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.example.topgamesdata.model.Game(259395680946100)) {
          primaryTableReference : game as g1_0
        }
      }
    }

DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Game(259395680946100).developer -> EntitySelectFetchInitializer(com.example.topgamesdata.model.Game(259395680946100).developer)@185144625 (ToOneAttributeMapping(NavigableRole[com.example.topgamesdata.model.Game.developer])@610603627)
DEBUG -     com.example.topgamesdata.model.Game(259395680946100).genre -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(259395680946100).genre)@1240108063 (PluralAttribute(com.example.topgamesdata.model.Game.genre))
DEBUG -     com.example.topgamesdata.model.Game(259395680946100).platform -> DelayedCollectionInitializer(com.example.topgamesdata.model.Game(259395680946100).platform)@708145486 (PluralAttribute(com.example.topgamesdata.model.Game.platform))
DEBUG -     com.example.topgamesdata.model.Game(259395680946100) -> EntityResultInitializer(com.example.topgamesdata.model.Game(259395680946100))@1760170563 (SingleTableEntityPersister(com.example.topgamesdata.model.Game))
DEBUG - select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - execute query: select g1_0.id,g1_0.description,g1_0.developer_id,g1_0.name,g1_0.release_date from game g1_0
DEBUG - Setting JDBC Connection [HikariProxyConnection@702692527 wrapping org.mariadb.jdbc.Connection@4e11c6ff] read-only
DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG - Initiating transaction commit
DEBUG - begin
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(627258296<open>)]
DEBUG - committing
DEBUG - execute query: set autocommit=0
DEBUG - execute query: COMMIT
DEBUG - System variable change:  autocommit = OFF
DEBUG - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2dddbd4b]
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(1463814548<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - Created new SQL alias : d1_0
DEBUG - Registration of TableGroup [StandardTableGroup(com.example.topgamesdata.model.Developer(259395683782800))] with identifierForTableGroup [com.example.topgamesdata.model.Developer] for NavigablePath [com.example.topgamesdata.model.Developer] 
DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.example.topgamesdata.model.Developer(259395683782800)]
 |  +-BasicFetch [com.example.topgamesdata.model.Developer(259395683782800).country]
 |  \-BasicFetch [com.example.topgamesdata.model.Developer(259395683782800).name]

DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : com.example.topgamesdata.model.Developer(259395683782800)) {
          primaryTableReference : developer as d1_0
        }
      }
    }

DEBUG - execute query: set autocommit=1
DEBUG - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
DEBUG - System variable change:  autocommit = ON
DEBUG - Initializer list
DEBUG -     com.example.topgamesdata.model.Developer(259395683782800) -> EntityResultInitializer(com.example.topgamesdata.model.Developer(259395683782800))@149998043 (SingleTableEntityPersister(com.example.topgamesdata.model.Developer))
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1679096668 wrapping org.mariadb.jdbc.Connection@1bc57eca]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - execute query: select d1_0.id,d1_0.country,d1_0.name from developer d1_0
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - execute query: set autocommit=1
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1822311141 wrapping org.mariadb.jdbc.Connection@3c17bd0b]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - Initiating transaction commit
DEBUG - Committing JPA transaction on EntityManager [SessionImpl(656791099<open>)]
DEBUG - committing
DEBUG - execute query: COMMIT
DEBUG - execute query: set autocommit=1
DEBUG - System variable change:  autocommit = ON
DEBUG - Resetting read-only flag of JDBC Connection [HikariProxyConnection@702692527 wrapping org.mariadb.jdbc.Connection@4e11c6ff]
DEBUG - Not closing pre-bound JPA EntityManager after transaction
DEBUG - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
DEBUG - Writing [[]]
DEBUG - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG - Completed 200 OK
DEBUG - Set SecurityContextHolder to anonymous SecurityContext
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
DEBUG - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d, started on Fri Jan 27 18:43:29 CET 2023
DEBUG - Stopping beans in phase 2147482623
DEBUG - Bean 'webServerGracefulShutdown' completed its stop procedure
DEBUG - Stopping beans in phase 2147481599
DEBUG - Bean 'webServerStartStop' completed its stop procedure
DEBUG - Stopping beans in phase -2147483647
DEBUG - Bean 'springBootLoggingLifecycle' completed its stop procedure
DEBUG - Unregistering JMX-exposed beans on shutdown
DEBUG - Unregistering JMX-exposed beans
DEBUG - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
DEBUG - HHH000031: Closing
DEBUG - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40b2c0be] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4213bc3e]
DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
INFO  - HikariPool-1 - Shutdown initiated...
DEBUG - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@3c17bd0b: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@4e11c6ff: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@1bc57eca: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@1d50e1ef: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@590c701d: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@5c87ac3f: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@4cd0f8d5: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@57ec5d69: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@69dbf268: (connection evicted)
DEBUG - HikariPool-1 - Closing connection org.mariadb.jdbc.Connection@56e67915: (connection evicted)
DEBUG - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
INFO  - HikariPool-1 - Shutdown completed.
